<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programación on El Blog de Marcelo!</title>
    <link>http://localhost:1313/category/programaci%C3%B3n/</link>
    <description>Recent content in Programación on El Blog de Marcelo!</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>es</language>
    <lastBuildDate>Tue, 27 Feb 2018 03:38:25 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/category/programaci%C3%B3n/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Taller de Programación de Sockets TCP/IP</title>
      <link>http://localhost:1313/2018/02/taller-programacion-de-sockets-tcp-ip/</link>
      <pubDate>Tue, 27 Feb 2018 03:38:25 +0000</pubDate>
      <guid>http://localhost:1313/2018/02/taller-programacion-de-sockets-tcp-ip/</guid>
      <description>&lt;p&gt;En este mes de febrero tuve la suerte de llevar adelante en la UNLu un breve pero conciso taller de programación de sockets basado en Python. Dejo los slides, ejemplos de código y ejercicios planteados en el apartado de &lt;a href=&#34;http://localhost:1313/charlas/&#34;&gt;Charlas&lt;/a&gt; de mi blog, y en este post.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clase 1: Introducción Sockets API. Modelo OSI, entornos de ejecución.Introducción a Python. Socket API para UDP. Ejercicios.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C1.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C1.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Código de ejemplo: &lt;a href=&#34;http://marcelofernandez.info/sockets/code/Clase%201%20-%20UDP.zip&#34;&gt;ZIP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clase 2: Socket API para TCP. Código de ejemplo y ejercicios.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C2.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C2.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clase 3: Multiprogramación, concurrencia, paralelismo. Syscall fork() y relacionados. Ejemplos de servidor multiproceso. Procesos vs. Threads.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C3.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C3.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Código de ejemplo: &lt;a href=&#34;http://marcelofernandez.info/sockets/code/Clase%203%20-%20Procesos.zip&#34;&gt;ZIP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clase 4: Sockets asincrónicos. Modelo de trabajo, syscall select(). Ejemplos de código. Introducción a Scapy.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C4.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C4.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Código de ejemplo: &lt;a href=&#34;http://marcelofernandez.info/sockets/code/Clase%204%20-%20Select.zip&#34;&gt;ZIP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¡Saludos!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pwning hardware</title>
      <link>http://localhost:1313/2014/11/pwning-hardware/</link>
      <pubDate>Sat, 01 Nov 2014 16:00:51 +0000</pubDate>
      <guid>http://localhost:1313/2014/11/pwning-hardware/</guid>
      <description>&lt;p&gt;El video dura media hora, pero a mí me gustó muchísimo, aprendí mucho. &lt;a href=&#34;http://scanlime.org/&#34; title=&#34;Scanlime - One girl&#39;s diary of improvisational engineering&#34;&gt;Mikah Scott&lt;/a&gt; es &lt;a href=&#34;http://scanlime.org/resume/&#34; title=&#34;Mikah Scott - Resume&#34;&gt;una&lt;/a&gt; &lt;a href=&#34;http://www.misc.name/&#34; title=&#34;Micah Scott Art Portfolio&#34;&gt;genia&lt;/a&gt;, y se propone investigar cómo customizar el firmware de una lectora/grabadora de CD/DVD/Blu-Ray, para dominarlo por completo, empezando por el microcontrolador ARM que posee. Por ejemplo, moviendo el láser en la posición que uno quiera y dispararlo. Habla un excelente y puntilloso inglés, así que se le entiende palabra por palabra, sugiero que lo vean incluso para practicar su inglés técnico.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cómo compartir un dispositivo serie por la red en Linux</title>
      <link>http://localhost:1313/2013/05/como-compartir-un-dispositivo-serie-por-la-red-en-linux/</link>
      <pubDate>Mon, 27 May 2013 17:12:54 +0000</pubDate>
      <guid>http://localhost:1313/2013/05/como-compartir-un-dispositivo-serie-por-la-red-en-linux/</guid>
      <description>&lt;p&gt;En el trabajo me encontré con la necesidad de utilizar un puerto serial (por ejemplo, un dispositivo con un adaptador USB/Serie en /dev/ttyUSB0, un módem 3G o una placa &lt;a href=&#34;http://www.arduino.cc/&#34; title=&#34;Arduino - HomePage&#34;&gt;Arduino&lt;/a&gt; en /dev/ttyACM0, etc.) conectado físicamente a una máquina en mi red, que por diferentes motivos (distancia, pereza, lo que sea), lo quería acceder con un programa en mi máquina, pero como si fuera local.&lt;/p&gt;
&lt;p&gt;Es decir, tenía un programa en mi máquina que usa &lt;a href=&#34;http://pyserial.sourceforge.net&#34; title=&#34;pySerial&#34;&gt;pySerial&lt;/a&gt; para acceder al Arduino en /dev/ttyACM0, pero por diferentes motivos el Arduino está conectado en otra máquina de mi red y quería que, sin tocar mi programa, éste acceda al Arduino como si estuviera directamente conectado a mi PC, haciendo de alguna manera &amp;ldquo;transparente&amp;rdquo; la red que nos separaba. Por suerte lo pude resolver, y quizás esta herramienta y acercamiento sirva a más de uno para resolver algún otro problema similar.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Algunos videos de PyCon US 2013</title>
      <link>http://localhost:1313/2013/03/algunos-videos-de-pycon-us-2013/</link>
      <pubDate>Thu, 21 Mar 2013 12:29:11 +0000</pubDate>
      <guid>http://localhost:1313/2013/03/algunos-videos-de-pycon-us-2013/</guid>
      <description>&lt;p&gt;Ya están subiéndose al sitio &lt;a href=&#34;http://pyvideo.org/&#34; title=&#34;Python related video indexed so you can find it&#34;&gt;PyVideo&lt;/a&gt; los videos de la &lt;a href=&#34;https://us.pycon.org/2013/&#34; title=&#34;PyCon US 2013&#34;&gt;PyCon US 2013&lt;/a&gt; que está cerrando hoy. Algunas de las charlas que quería compartir, de temas que son particularmente de mi interés, son:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1739/pypy-without-the-gil&#34; title=&#34;PyPy without the GIL&#34;&gt;PyPy without the GIL - Armin Rigo&lt;/a&gt;&lt;/strong&gt;:
PyPy has a version without the Global Interpreter Lock (GIL). It can run multiple threads concurrently. But the real benefit is that you have other, new ways of using all your cores. In this talk I will describe how it is possible (STM) and then focus on some of these new opportunities, e.g. show how we used multiple cores in a single really big program without adding thread locks everywhere.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/Q9wf63flICs?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
**&lt;a href=&#34;http://pyvideo.org/video/1770/python-profiling&#34; title=&#34;Python Profiling Talk&#34;&gt;Python Profiling - Amjith Ramanujam&lt;/a&gt;&lt;strong&gt;:
This talk will give a tour of different profiling techniques available for Python applications. We&amp;rsquo;ll cover specific modules in Python for doing function profiling and line level profiling. We&amp;rsquo;ll show the short comings of such mechanisms in production and discuss how to do sampled profiling of specific functions. We&amp;rsquo;ll finish with statistical profilers that use thread stack interrogation.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/QJwVYlDzAXs?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1773/making-apache-suck-less-for-hosting-python-web-ap&#34; title=&#34;Making Apache suck less for hosting Python web apps&#34;&gt;Making Apache suck less for hosting Python web applications - Graham Dumpleton&lt;/a&gt;&lt;strong&gt;:
It is not hard to find developers who will tell you that Apache sucks for running Python web applications. Is there a valid basis to such claims or have they simply been misguided by the views of others? This talk will endeavor to shine a light on the realities of and limitations in working with Apache, as well as the challenges in implementing the mod_wsgi module for Apache.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/k6Erh7oHvns?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1762/using-futures-for-async-gui-programming-in-python&#34; title=&#34;Using futures for async GUI programming in Python 3.3&#34;&gt;Using futures for async GUI programming in Python 3.3 - Dino Viehland&lt;/a&gt;&lt;strong&gt;:
In Python 3.2 a new feature was added for concurrent programming - futures. In Python 3.3 generators have been extended to allow returning from a generator with a value. In this talk we&amp;rsquo;ll show how these features can be combined to create a rich and easy to use asynchronous programming model which can be used for creating highly responsive GUI applications or easy async programming.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/oJQdX_w1vXY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1701/kivy-building-gui-and-mobile-apps-with-python&#34; title=&#34;Kivy Talk&#34;&gt;Kivy: Building GUI and Mobile apps with Python - Mathieu Virbel / Thomas Hansen&lt;/a&gt;&lt;strong&gt;:
This talk will introduce the Kivy project (&lt;a href=&#34;http://kivy.org&#34;&gt;http://kivy.org&lt;/a&gt;). Kivy’s mission is to make building graphical user interfaces on any device fun, efficient, and pythonic.
The talk will focus on giving attendees an overview of how they can use kivy to build exiting UIs and mobile apps.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/yPWj6k5MRak?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1798/make-more-responsive-web-applications-with-socket&#34; title=&#34;Make More Responsive Web Applications with SocketIO and gevent&#34;&gt;Make More Responsive Web Applications with SocketIO and gevent - Luke Sneeringer&lt;/a&gt;**:
An explanation of how to implement a socket.io server in Python to serve websocket requests from browsers.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/TH-ZCuOdrQE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyConAr 2012: Charla sobre el protocolo SPDY – Video</title>
      <link>http://localhost:1313/2013/01/pyconar-2012-charla-sobre-el-protocolo-spdy-video/</link>
      <pubDate>Wed, 02 Jan 2013 18:53:28 +0000</pubDate>
      <guid>http://localhost:1313/2013/01/pyconar-2012-charla-sobre-el-protocolo-spdy-video/</guid>
      <description>&lt;p&gt;Con el nuevo año, aparecieron en su totalidad los &lt;a href=&#34;http://www.youtube.com/user/mreingart/videos&#34; title=&#34;Videos PyConAr 2012&#34;&gt;videos de la PyConAr 2012&lt;/a&gt; subidos a Youtube por Mariano Reingart, el Coordinador del evento.&lt;/p&gt;
&lt;p&gt;Dejo en este post el mío, no sin un dejo de &amp;ldquo;vergüencita&amp;rdquo;, je&amp;hellip; (encima todavía no lo vi):&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/BCB2Vbw-XJQ?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;p&gt;Cualquier duda me pueden consultar o comentar este mismo post. Espero próximamente escribir más en profundidad de ciertos aspectos que me quedaron afuera de la charla.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyConAr 2012: Charla sobre el protocolo SPDY - Slides</title>
      <link>http://localhost:1313/2012/11/pyconar-2012-charla-sobre-el-protocolo-spdy-slides/</link>
      <pubDate>Mon, 19 Nov 2012 16:08:12 +0000</pubDate>
      <guid>http://localhost:1313/2012/11/pyconar-2012-charla-sobre-el-protocolo-spdy-slides/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://ar.pycon.org/2012/&#34; title=&#34;PyCon Argentina 2012&#34;&gt;&lt;img alt=&#34;PyCon Argentina 2012&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2012/11/header_pyconar2012.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/wp-content/uploads/2012/11/spdy.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2012/11/spdy-150x150.png&#34;&gt;&lt;/a&gt; Terminó la &lt;a href=&#34;http://ar.pycon.org/2012/&#34; title=&#34;PyCon Argentina 2012&#34;&gt;PyCon Argentina 2012&lt;/a&gt;, y con ella vienen semanas menos movidas (espero). Este post es para agradecer a la organización, Mariano, Juan BC, y a todos aquellos que concurrieron y compartieron conmigo este evento que tanto nos gusta a los fanáticos de este lenguaje de programación.&lt;/p&gt;
&lt;p&gt;Además, tuve el placer de dar una charla introductoria del protocolo SPDY, que pretende reemplazar a HTTP 1.1, y que muy probablemente ya estés usando sin darte cuenta. :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Estableciendo conexiones HTTPS &#34;bien seguras&#34; en Python</title>
      <link>http://localhost:1313/2011/02/estableciendo-conexiones-https-bien-seguras-en-python/</link>
      <pubDate>Sat, 19 Feb 2011 19:45:55 +0000</pubDate>
      <guid>http://localhost:1313/2011/02/estableciendo-conexiones-https-bien-seguras-en-python/</guid>
      <description>&lt;p&gt;Hace unos días que tenía pendiente colgar esto acá, ya que a alguien en &lt;a href=&#34;http://www.python.org.ar&#34;&gt;PyAr&lt;/a&gt; &lt;a href=&#34;http://comments.gmane.org/gmane.org.user-groups.python.argentina/44953&#34;&gt;le fue útil&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://es.wikipedia.org/wiki/Https&#34;&gt;HTTPS&lt;/a&gt; es la manera de establecer conexiones HTTP pero &lt;em&gt;seguras&lt;/em&gt;, en el sentido de que previo al diálogo HTTP estándar pero luego de establecerse la conexión TCP contra el servidor, se negocia entre los participantes una conexión/sesión &amp;ldquo;especial&amp;rdquo; entre ambos.  Allí se intercambian certificados con el fin de autenticar contra quién se &amp;ldquo;está hablando&amp;rdquo;, para luego, si hubo éxito en la dicha comprobación, encriptar (o no) todo lo que va para el otro lado, tanto del Servidor al Cliente (generalmente un navegador), como del Cliente al Servidor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navegador simple con wxPython &#43; Webkit/GTK</title>
      <link>http://localhost:1313/2010/10/navegador-simple-con-wxpython-webkitgtk/</link>
      <pubDate>Sun, 10 Oct 2010 01:28:54 +0000</pubDate>
      <guid>http://localhost:1313/2010/10/navegador-simple-con-wxpython-webkitgtk/</guid>
      <description>&lt;p&gt;Hace algunos posts (¡casi un año ya!) &lt;a href=&#34;http://localhost:1313/2009/11/navegador-simple-con-pywebkitgtk/&#34;&gt;escribí&lt;/a&gt; sobre una manera fácil y rápida de tener un componente &amp;ldquo;navegador web&amp;rdquo; en Python sobre Linux/BSD, gracias a &lt;a href=&#34;http://www.pygtk.org&#34;&gt;PyGTK&lt;/a&gt; y &lt;a href=&#34;http://webkitgtk.org/&#34;&gt;WebkitGTK&lt;/a&gt;, llamado lógicamente, &lt;a href=&#34;http://code.google.com/p/pywebkitgtk/&#34;&gt;pyWebkitGTK&lt;/a&gt;. En pocas líneas de código uno puede disponer de un navegador potente y completo en un panel de su aplicación basada en &lt;a href=&#34;http://www.pygtk.org&#34;&gt;PyGTK&lt;/a&gt;, ideal para integrar aún más la cada omnipresente Web.&lt;/p&gt;
&lt;p&gt;Las vueltas de la vida y las ganas de experimentar y aprender te llevan a probar otros frameworks/librerías, como lo es &lt;a href=&#34;http://www.wxpython.org&#34;&gt;wxPython&lt;/a&gt;; tanto es así que de vez en cuando tengo el placer de dar &lt;a href=&#34;http://localhost:1313/charlas/&#34;&gt;alguna charla&lt;/a&gt; al respecto &lt;a href=&#34;#nota1&#34;&gt;[1]&lt;/a&gt;, y una de las debilidades que le usualmente le encontraba es la falta de un componente &amp;ldquo;browser web&amp;rdquo; nativo y soportado en todas las plataformas (wxPython sólo incluye IE embebible como ActiveX en Windows).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Free Pascal y Lazarus en Ubuntu</title>
      <link>http://localhost:1313/2010/06/free-pascal-y-lazarus-en-ubuntu/</link>
      <pubDate>Sun, 20 Jun 2010 11:00:18 +0000</pubDate>
      <guid>http://localhost:1313/2010/06/free-pascal-y-lazarus-en-ubuntu/</guid>
      <description>&lt;p&gt;Creo que la gran mayoría de los programadores debemos recordar aquellos primeros momentos en que uno pasaba tardes y noches enteras escribiendo y escribiendo líneas de código en aquellas XT, AT, Commodores 64/128, etc., sólo por amor al arte y puro fanatismo. Supongo que diríamos lo mismo de los primeros años de facultad, cuando en materias de título &amp;ldquo;Programación I&amp;rdquo; uno repasaba el paradigma de la &lt;a href=&#34;http://es.wikipedia.org/wiki/Programaci%C3%B3n_estructurada&#34;&gt;Programación Estructurada&lt;/a&gt;, casi siempre en el lenguaje de aprendizaje facultativo por excelencia, al menos acá en Argentina: &lt;strong&gt;&lt;a href=&#34;http://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_Pascal&#34;&gt;Pascal&lt;/a&gt;&lt;/strong&gt;, usando &lt;a href=&#34;http://en.wikipedia.org/wiki/Turbo_pascal&#34;&gt;Turbo Pascal&lt;/a&gt;, su versión más popular.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyDay Rafaela 2010 - Introducción a wxPython</title>
      <link>http://localhost:1313/2010/05/pyday-rafaela-2010-introduccion-a-wxpython/</link>
      <pubDate>Mon, 10 May 2010 17:32:48 +0000</pubDate>
      <guid>http://localhost:1313/2010/05/pyday-rafaela-2010-introduccion-a-wxpython/</guid>
      <description>&lt;p&gt;Para no ser menos que &lt;a href=&#34;http://www.juanjoconti.com.ar/2010/05/09/charla-entendiendo-decoradores-en-python/&#34;&gt;Juanjo&lt;/a&gt; y &lt;a href=&#34;http://fisadev.blogspot.com/2010/05/pyday-rafaela-2010_09.html&#34;&gt;Fisa&lt;/a&gt;, ¡qué bueno estuvo el &lt;a href=&#34;www.pyday.com.ar/rafaela2010/&#34;&gt;PyDay Rafaela 2010&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Muchos (muchos) asistentes, muy buena onda, y una chorizeada + fernet a la noche inolvidables&amp;hellip; En la sección de &lt;a href=&#34;http://localhost:1313/charlas/&#34;&gt;Charlas&lt;/a&gt; del blog están los &lt;a href=&#34;http://marcelofernandez.info/charlas/Introduccion%20a%20wxPython.pdf&#34;&gt;slides&lt;/a&gt; de mi &amp;ldquo;Introducción a wxPython&amp;rdquo;, más los &lt;a href=&#34;http://marcelofernandez.info/charlas/Introduccion%20a%20wxPython.zip&#34;&gt;ejemplos&lt;/a&gt; de rigor. También [hice propaganda](&lt;a href=&#34;http://marcelofernandez.info/charlas/Ubuntu&#34;&gt;http://marcelofernandez.info/charlas/Ubuntu&lt;/a&gt; Lightning Talk.pdf) de Ubuntu en las Lightning Talks. :-P&lt;/p&gt;
&lt;p&gt;Acá hay un par de fotos&amp;hellip; con los días van a ir apareciendo más cosas en el sito del evento&amp;hellip; incluso los videos de las charlas. :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Renderizando PDFs en Python con Poppler II</title>
      <link>http://localhost:1313/2010/04/renderizando-pdfs-en-python-con-poppler-ii/</link>
      <pubDate>Thu, 15 Apr 2010 18:04:29 +0000</pubDate>
      <guid>http://localhost:1313/2010/04/renderizando-pdfs-en-python-con-poppler-ii/</guid>
      <description>&lt;p&gt;Hace unos días me llegó un mail de alguien preguntándome cómo, a partir de la &lt;a href=&#34;http://localhost:1313/2009/05/renderizando-pdfs-en-python-con-poppler/&#34;&gt;parte I de este artículo&lt;/a&gt;, hacer un sencillo visor de PDFs con &lt;a href=&#34;http://www.wxpython.org&#34;&gt;wxPython&lt;/a&gt;. Me encontré con algunas dificultades, principalmente que el &lt;a href=&#34;www.wxpython.org/docs/api/wx.ScrolledWindow-class.html&#34;&gt;ScrolledWindow&lt;/a&gt; de wxPython no permite actualizarse dinámicamente, o automáticamente según el contenido (esto &lt;a href=&#34;http://www.pygtk.org/docs/pygtk/class-gtkadjustment.html&#34;&gt;sí es bastante sencillo en GTK&lt;/a&gt;); con lo cual se complicaba hacer zoom, modificar el tamaño de la ventana y adaptar los scrollbars, etc.&lt;/p&gt;
&lt;p&gt;Sin embargo, con alguna vuelta de más pude armar un ejemplo, que paso a dejar &lt;a href=&#34;http://code.activestate.com/recipes/577195-wxpython-pdf-viewer-using-poppler/&#34;&gt;acá&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reemplazando texto con expresiones regulares en Python</title>
      <link>http://localhost:1313/2010/04/reemplazando-texto-con-expresiones-regulares-en-python/</link>
      <pubDate>Fri, 02 Apr 2010 18:01:11 +0000</pubDate>
      <guid>http://localhost:1313/2010/04/reemplazando-texto-con-expresiones-regulares-en-python/</guid>
      <description>&lt;p&gt;Hay veces en que uno necesita automatizar tareas, como reemplazar cierto texto por otro bajo ciertas condiciones, y el viejo &amp;ldquo;%s/cosa/otra/g&amp;rdquo; &lt;a href=&#34;http://www.linux.com/learn/tutorials/8255-vim-tips-the-basics-of-search-and-replace&#34;&gt;del vim&lt;/a&gt; nos queda corto. En mi caso en particular, estaba metiendo algunas pequeñas características en &lt;a href=&#34;http://www.sistemasagiles.com.ar/trac/wiki/PyFpdf&#34;&gt;PyFpdf&lt;/a&gt;, y vi que había &lt;a href=&#34;http://www.sistemasagiles.com.ar/trac/browser/pyfpdf/font/times.py?rev=103&#34;&gt;algunos archivos .py&lt;/a&gt; llenos de llamadas a la función &lt;a href=&#34;http://docs.python.org/library/functions.html#chr&#34;&gt;chr()&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Claro, PyFpdf es un port más o menos &amp;ldquo;haragán&amp;rdquo; ( &lt;em&gt;lazy&lt;/em&gt;) de &lt;a href=&#34;http://www.fpdf.org/&#34;&gt;Fpdf para PHP&lt;/a&gt;, y el autor original evidentemente encontró más sencillo definir algunas fuentes (en binario) haciendo sucesivas llamadas a la función chr(), como  esta:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navegador simple con Python &#43; Webkit/GTK</title>
      <link>http://localhost:1313/2009/11/navegador-simple-con-pywebkitgtk/</link>
      <pubDate>Thu, 19 Nov 2009 21:56:12 +0000</pubDate>
      <guid>http://localhost:1313/2009/11/navegador-simple-con-pywebkitgtk/</guid>
      <description>&lt;p&gt;Hoy me encontré con otro &lt;a href=&#34;http://mx.grulic.org.ar/lurker/message/20091118.001651.3f9b4974.es.html&#34;&gt;un hilo en la lista de PyAr&lt;/a&gt; que me deja un link más que interesante: ¡Existe un binding para usar &lt;a href=&#34;http://code.google.com/p/pywebkitgtk/&#34;&gt;Webkit sobre GTK desde Python&lt;/a&gt;, y lo mejor de todo es que &lt;a href=&#34;http://packages.ubuntu.com/karmic/python-webkit&#34;&gt;ya está incluido en los repositorios&lt;/a&gt; de Ubuntu 9.10!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.webkit.org&#34;&gt;Webkit&lt;/a&gt; es un motor de &lt;a href=&#34;http://es.wikipedia.org/wiki/Renderizaci%C3%B3n&#34;&gt;renderizado&lt;/a&gt; (&amp;ldquo;dibujado&amp;rdquo;) de páginas web, que es utilizado en el corazón en cada vez más navegadores, como &lt;a href=&#34;http://www.google.com.ar/chrome&#34;&gt;Chrome&lt;/a&gt;, &lt;a href=&#34;http://www.apple.com/es/safari/&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;http://www.konqueror.org/&#34;&gt;Konqueror&lt;/a&gt;, etc. Es super completo y veloz; y permite ejecutarse en muchísimas plataformas y sistemas diferentes.  Si bien existen otros métodos para embeber un navegador en una aplicación PyGTK, como por ejemplo &lt;a href=&#34;http://www.pygtk.org/pygtkmozembed/class-gtkmozembed.html&#34;&gt;gtkmozembed&lt;/a&gt; (que embebe el motor de &lt;a href=&#34;http://www.mozilla-europe.org/es/firefox/&#34;&gt;Firefox&lt;/a&gt;), éste no es muy poderoso, o por lo menos no deja meterle mucha &amp;ldquo;mano&amp;rdquo; para personalizarlo, y uno termina teniendo relativamente muy poco &amp;ldquo;poder&amp;rdquo;. En cambio con Webkit/GTK se pueden hacer muchas más cosas, tan sólo hace falta ver la documentación y un ejemplo (links al final, claro). :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visor de Imágenes Simple con PyGTK</title>
      <link>http://localhost:1313/2009/11/visor-de-imagenes-simple-con-pygtk/</link>
      <pubDate>Mon, 16 Nov 2009 15:00:57 +0000</pubDate>
      <guid>http://localhost:1313/2009/11/visor-de-imagenes-simple-con-pygtk/</guid>
      <description>&lt;p&gt;Dado que alguien me pidió vía twitter un ejemplo de cómo hacer un zoom de una imagen en PyGTK, hice este ejemplito sencillo que sólo carga una imagen en un widget Gtk.Image.&lt;/p&gt;
&lt;p&gt;Maneja el movimiento de la imagen con el mouse, las teclas del cursor y hace zoom con F1 (&amp;ldquo;0 o adaptar a ventana&amp;rdquo;), F2 (+25%), F3 (+50%), F4(+75%) y F5(&amp;quot;%+100 o 1:1&amp;quot;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    SimpleImageViewer - Visor simple de imágenes, de ejemplo, que utiliza PyGTK.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Marcelo Fidel Fernández - http://www.marcelofernandez.info
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Licencia: BSD. Disponible en: http://www.freebsd.org/copyright/license.html
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    TODO:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        * Dar la opción de usar el scroll del mouse para hacer zoom.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        * Mejorar el código y peformance (quizás).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import pygtk
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pygtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2.0&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import gtk
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Variables globales para el ejemplo; podrían ir en un archivo de configuración,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# como por ejemplo &amp;#39;config.py&amp;#39; e importarlo.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mapeo de teclas - Ver constantes en el modulo gtk.keysyms&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keysyms as kb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Estructura: teclas (en mayúscula, contempla minúsculas también)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# (offset_X_pixeles, offset_Y_pixeles)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OFFSET_GRAL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MOVE_KEYS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Up : (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;OFFSET_GRAL), &lt;span style=&#34;color:#75715e&#34;&gt;# Arriba&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Down : (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,  OFFSET_GRAL), &lt;span style=&#34;color:#75715e&#34;&gt;# Abajo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Right : (OFFSET_GRAL, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),  &lt;span style=&#34;color:#75715e&#34;&gt;# Derecha&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Left : (&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;OFFSET_GRAL, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;# Izquierda&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Estructura: tecla: nivel de zoom (zoom_ratio)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ZOOM_KEYS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F1: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F2: &lt;span style=&#34;color:#ae81ff&#34;&gt;25.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F3: &lt;span style=&#34;color:#ae81ff&#34;&gt;50.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F4: &lt;span style=&#34;color:#ae81ff&#34;&gt;75.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F5: &lt;span style=&#34;color:#ae81ff&#34;&gt;100.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_IMAGE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/share/backgrounds/Cherries.jpg&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; SimpleImageViewer:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, image_file):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Window(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;WINDOW_TOPLEVEL)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;delete_event&amp;#34;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close_application)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_position(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;WIN_POS_CENTER_ALWAYS)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_default_size(&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf_new_from_file(image_file)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;float&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_width())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;float&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_height())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Image()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_from_pixbuf(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Viewport()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# No están por defecto, los agrego&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_events(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BUTTON_RELEASE_MASK &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BUTTON1_MOTION_MASK)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;button-press-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_button_pressed)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;button-release-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_button_released)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;motion-notify-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_mouse_moved)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Lo conecto a la ventana, ya que siempre tiene el foco&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key-press-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_key_press)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scrolled_wnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ScrolledWindow()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scrolled_wnd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scrolled_wnd)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show_all()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_update_image&lt;/span&gt;(self, zoom_ratio):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Updates the image in the widget according to the zoom_ratio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Actualiza la imagen en el widget Image con el zoom_ratio de parámetro
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# TODO: Prioriza que encaje el ancho por sobre el alto de la imagen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# al estar maximizado. Mejorar.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Obtengo las dimensiones actuales del viewport&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        rect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_allocation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Resize de la imagen conservando las proporciones de la imagen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ancho &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (base &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (zoom_ratio&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            relacion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            alto &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(ancho &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; relacion&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            alto &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (base &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (zoom_ratio&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            relacion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ancho &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(alto &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (relacion&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        scaled_buf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scale_simple(ancho, alto, gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;INTERP_BILINEAR)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_from_pixbuf(scaled_buf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_move_image&lt;/span&gt;(self, offset_x, offset_y):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Moves the image inside the viewport to the specified offset (+ or - pixels)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Mueve/Desplaza la imagen del viewport según el offset que se le especifique
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xadjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;props&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hadjustment
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; offset_x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        yadjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;props&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vadjustment
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; offset_y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Si las cosas están dentro de los bordes, seteo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (newx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (newx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; (xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;page_size)):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_hadjustment(xadjust)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (newy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (newy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; (yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;page_size)):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_vadjustment(yadjust)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_key_press&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Callback to handle the keys pressed in the main window
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Callback que maneja las teclas que se presionan en la ventana
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        keycode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keyval_to_upper(event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keyval)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; keycode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; MOVE_KEYS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            offset_x, offset_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MOVE_KEYS[keycode]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_move_image(offset_x, offset_y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; keycode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ZOOM_KEYS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_update_image(ZOOM_KEYS[keycode])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True &lt;span style=&#34;color:#75715e&#34;&gt;# Con True cancelo el evento&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_mouse_moved&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Callback to the mouse movement inside the viewport
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Callback que es llamado cuando el mouse se mueve en el viewport
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Ver: http://www.pygtk.org/pygtk2tutorial-es/sec-EventHandling.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_hint:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            x, y, state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_pointer()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;state
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;x_root, event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;y_root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BUTTON1_MASK:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            offset_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousex &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            offset_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousey &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_move_image(offset_x, offset_y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_button_pressed&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; When the user presses the left mouse button, save the x and y pixel positions,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            and change the cursor.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Cuando el usuario presiona el botón izquierdo, guardo los puntos x, y de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            origen del evento y cambio el cursor a &amp;#34;moviéndose&amp;#34;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;button &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;change_vport_cursor(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Cursor(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FLEUR))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;x_root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;y_root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_button_released&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; When the user releases the left mouse button, set the normal cursor.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Cuando el usuario suelta el botón izquierdo, vuelvo el cursor al normal &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;button &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;change_vport_cursor(None)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;change_vport_cursor&lt;/span&gt;(self, type):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_cursor(type)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;close_application&lt;/span&gt;(self, widget, event, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main_quit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        image_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        image_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DEFAULT_IMAGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SimpleImageViewer(image_file)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Queda pendiente manejar el scroll del mouse para hacer zoom (ya que GTK mueve el gtk.Scrollwindow que contiene la imagen por defecto). Si bien funciona copiando y pegando esto en un archivo, también pueden descargar el ejemplo &lt;a href=&#34;http://www.marcelofernandez.info/files/image_viewer.py&#34;&gt;desde acá&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Desensamblando Python</title>
      <link>http://localhost:1313/2009/08/desensamblando-python/</link>
      <pubDate>Sun, 30 Aug 2009 17:53:25 +0000</pubDate>
      <guid>http://localhost:1313/2009/08/desensamblando-python/</guid>
      <description>&lt;p&gt;Mucho no me gusta hacer posts con casi nada de aporte propio, pero en este caso se lo merece. Este post sólo va a referenciar al excelente sitio de &lt;a href=&#34;http://www.doughellmann.com/about/&#34;&gt;Doug Hellman&lt;/a&gt;, &lt;a href=&#34;http://www.doughellmann.com/PyMOTW/&#34;&gt;PyMOTW&lt;/a&gt; (Python Module of the Week). Básicamente el autor presenta una vez por semana un módulo de la biblioteca estándar de Python, realizando un análisis del mismo y mostrando ejemplos de uso.&lt;/p&gt;
&lt;p&gt;En particular, &lt;a href=&#34;http://www.doughellmann.com/PyMOTW/dis/&#34;&gt;esta semana&lt;/a&gt; hizo una introducción al módulo &lt;a href=&#34;http://docs.python.org/library/dis.html&#34;&gt;dis&lt;/a&gt;, que desensambla código Python mostrando el bytecode respectivo. Lo bueno es que muestra varios usos para el mismo (nuevos para mí), como en el caso de un debug o en el de optimizar el funcionamiento ahorrando bytecodes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control de Versiones: Manejando las diferencias entre distribuido y centralizado</title>
      <link>http://localhost:1313/2009/07/control-de-versiones-manejando-las-diferencias-entre-distribuido-y-centralizado/</link>
      <pubDate>Sat, 25 Jul 2009 18:11:41 +0000</pubDate>
      <guid>http://localhost:1313/2009/07/control-de-versiones-manejando-las-diferencias-entre-distribuido-y-centralizado/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;VCSs&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2009/07/VCSs.png&#34;&gt;Dando vueltas &lt;a href=&#34;http://wxwidgets.blogspot.com/2009/07/playing-with-dvcs-for-wxwidgets.html&#34;&gt;por ahí&lt;/a&gt;, me entero que es muy sencillo utilizar localmente versionado de código fuente (gracias a los sistemas de control de versiones distribuidos, como por ejemplo &lt;a href=&#34;http://mercurial.selenic.com/wiki/&#34;&gt;Mercurial&lt;/a&gt;, &lt;a href=&#34;http://git-scm.com/&#34;&gt;GIT&lt;/a&gt; y &lt;a href=&#34;http://bazaar-vcs.org/&#34;&gt;Bazaar&lt;/a&gt;) para luego subir/actualizar los cambios a un repositorio &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;Subversion&lt;/a&gt; principal. Es decir, en vez de usar los comandos svn como clientes de un servidor Subversion, es posible utilizar alguno de estos sistemas distribuidos como clientes &amp;ldquo;consumidores&amp;rdquo; del repositorio principal, para luego aprovechar &lt;a href=&#34;http://en.wikipedia.org/wiki/Distributed_revision_control#Advantages&#34;&gt;sus importantes ventajas&lt;/a&gt; en forma local.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Applets Java en Ubuntu de 64 bits recargados</title>
      <link>http://localhost:1313/2009/07/applets-java-en-ubuntu-de-64-bits/</link>
      <pubDate>Sat, 18 Jul 2009 23:55:44 +0000</pubDate>
      <guid>http://localhost:1313/2009/07/applets-java-en-ubuntu-de-64-bits/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.java.com&#34;&gt;&lt;img alt=&#34;java_logo&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2009/07/java_logo.png&#34;&gt;&lt;/a&gt; Ayer actualicé mi Ubuntu 9.04 (64 bits) y vi que había una actualización de los paquetes &amp;quot; &lt;a href=&#34;http://packages.ubuntu.com/search?keywords=sun-java6&amp;amp;searchon=names&amp;amp;suite=jaunty&amp;amp;section=all&#34;&gt;sun-java6&lt;/a&gt;&amp;quot;, que corresponden a la &lt;a href=&#34;http://es.wikipedia.org/wiki/M%C3%A1quina_virtual_Java&#34;&gt;Máquina Virtual Java&lt;/a&gt;. Para mi sorpresa, se trata de una actualización bastante importante de todos los paquetes de la &lt;a href=&#34;http://java.sun.com/javase/&#34;&gt;implementación&lt;/a&gt; distribuida por &lt;a href=&#34;http://www.sun.com&#34;&gt;Sun&lt;/a&gt; de Java (que aún no es lo mismo que el proyecto &lt;a href=&#34;https://openjdk.dev.java.net/&#34;&gt;OpenJDK&lt;/a&gt;), y que incluye (después de &lt;a href=&#34;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4802695&#34;&gt;¡6 años de espera!&lt;/a&gt;) una implementación del &lt;a href=&#34;http://packages.ubuntu.com/jaunty/sun-java6-plugin&#34;&gt;Java Plugin de Sun&lt;/a&gt; para 64 bits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL 8.5</title>
      <link>http://localhost:1313/2009/07/postgresql-8-5/</link>
      <pubDate>Sat, 04 Jul 2009 16:16:56 +0000</pubDate>
      <guid>http://localhost:1313/2009/07/postgresql-8-5/</guid>
      <description>&lt;p&gt;No, no me equivoqué de número de versión. :-) &lt;a href=&#34;http://www.postgresql.org&#34;&gt;&lt;img alt=&#34;pgsql_logo&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2009/07/pgsql_logo.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Si bien &lt;a href=&#34;http://www.postgresql.org/about/news.1108&#34;&gt;PostgreSQL 8.4 ya salió&lt;/a&gt; y tiene &lt;a href=&#34;http://www.postgresql.org/about/press/features84&#34;&gt;unas cuantas novedades&lt;/a&gt;, quisiera &lt;a href=&#34;http://www.depesz.com/index.php/2009/07/03/waiting-for-8-5-lets-start/&#34;&gt;hacerme eco&lt;/a&gt; de lo que está en la cola de parches a aprobar para integrar la nueva rama de desarrollo de PostgreSQL 8.5. &lt;a href=&#34;http://commitfest.postgresql.org/action/commitfest_view?id=2&#34;&gt;Esta lista&lt;/a&gt; está compuesta por cosas como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://archives.postgresql.org/message-id/4A4DE104.8090605@pjmodos.net&#34;&gt;&lt;strong&gt;GRANT ON ALL IN schema&lt;/strong&gt;&lt;/a&gt;: Una manera de otorgar permisos a todos los objetos de un esquema.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://archives.postgresql.org/message-id/603c8f070906172043w6dba5b18x60e1cea76c44dba0@mail.gmail.com&#34;&gt;&lt;strong&gt;Machine-readable explain output v2&lt;/strong&gt;&lt;/a&gt;: Salidas del comando &lt;a href=&#34;http://www.postgresql.org/docs/8.3/interactive/using-explain.html&#34;&gt;EXPLAIN&lt;/a&gt; fácilemente legibles por otro software, es decir, fácilmente parseables para su procesamiento. El comando explain aceptaría como segundo parámetro el formato (además de los actuales) la keyword FORMAT, quedando así: EXPLAIN FORMAT [TEXT | JSON | XML]. Está bueno porque abre la puerta del desarrollo de herramientas de auto-tunning, basado en reglas estilo Sistema Experto.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.postgresql.org/wiki/SEPostgreSQL&#34;&gt;&lt;strong&gt;SE-PostgreSQL&lt;/strong&gt;&lt;/a&gt;: Security-Enhanced PostgreSQL, una mejora sustancial en la seguridad del SGBD y en el nivel de detalles del sistema de privilegios.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.postgresql.org/wiki/NTT%27s_Development_Projects#Synch_Rep&#34;&gt;&lt;strong&gt;Replicación Sincrónica&lt;/strong&gt;&lt;/a&gt;: Si algo le faltaba a PostgreSQL es una manera de replicación sincrónica integrada en el gestor. Esperemos que esto sí entre, aunque está &lt;a href=&#34;http://archives.postgresql.org/message-id/3f0b79eb0906152313n7d566aa8u80c73516453e5777@mail.gmail.com&#34;&gt;bastante&lt;/a&gt; &lt;a href=&#34;http://archives.postgresql.org/message-id/603c8f070907021902ufbb62cj7ca435f9d8712b4d@mail.gmail.com&#34;&gt;discutido&lt;/a&gt; el asunto porque es un cambio relativamente &amp;ldquo;gordo&amp;rdquo; en los internals del código, pero por lo que leí de estas discusiones parece haber consenso en llevarlo adelante e implementarlo. Por mi parte&amp;hellip; ¡lo necesito ya! :-)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://archives.postgresql.org/pgsql-hackers/2009-07/msg00158.php&#34;&gt;&lt;strong&gt;\dL para listas los lenguajes utilizados en psql&lt;/strong&gt;&lt;/a&gt;: Es una nueva característica en &lt;a href=&#34;http://www.postgresql.org/docs/8.3/interactive/app-psql.html&#34;&gt;psql&lt;/a&gt;, la de poder listar los lenguajes instalados en la base de datos (plpythonu, plpgsql, etc.).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://archives.postgresql.org/message-id/497CFC84.2070302@paradise.net.nz&#34;&gt;&lt;strong&gt;Estadísticas de esperas por bloqueos&lt;/strong&gt;:&lt;/a&gt; La idea es poder tener un historial de los bloqueos sufridos por los clientes en la BD, para poder detectar problemas y saber bien qué pasa en todo momento.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bueno, de más está decir que no hay ninguna garantía de que todo esto sea finalmente integrado en 8.5, sino que se está evaluando al mejor estilo Software Libre &lt;strong&gt;™&lt;/strong&gt;: &lt;a href=&#34;http://es.wikipedia.org/wiki/Revisi%C3%B3n_por_pares&#34;&gt;peer-review&lt;/a&gt;, discusión de estrategias del proyecto, consenso en la comunidad de desarrolladores y posterior aceptación/pedido de mejoras/rechazo. Así que veremos cómo sigue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Renderizando PDFs en Python con Poppler</title>
      <link>http://localhost:1313/2009/05/renderizando-pdfs-en-python-con-poppler/</link>
      <pubDate>Sat, 02 May 2009 21:34:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/05/renderizando-pdfs-en-python-con-poppler/</guid>
      <description>&lt;p&gt;Buenas&amp;hellip; hoy voy a mostrar una forma de renderizar archivos PDF dentro de nuestras aplicaciones y desde Python, para casi cualquier plataforma con la estemos trabajando.&lt;/p&gt;
&lt;p&gt;Introducción
Si bien cuando se arma una aplicación de escritorio se suele &amp;ldquo;llamar&amp;rdquo; a un software externo ( &lt;a href=&#34;http://www.adobe.com/es/products/reader/&#34;&gt;Acrobat Reader&lt;/a&gt;, &lt;a href=&#34;http://www.foxitsoftware.com/pdf/reader/&#34;&gt;Fox-It&lt;/a&gt;, &lt;a href=&#34;http://projects.gnome.org/evince/&#34;&gt;Evince&lt;/a&gt;, etc.) para que muestre el contenido de un archivo &lt;a href=&#34;http://es.wikipedia.org/wiki/Pdf&#34;&gt;PDF&lt;/a&gt;, generalmente queda &amp;ldquo;feo&amp;rdquo;; nuestro programa pierde la interacción y el control de lo que el usuario hace con el mismo, implica superponer un programa arriba del otro, etc. Esto suele producir una experiencia dificultosa para el usuario de nuestro querido programa, y como corresponde, los programadores nos ponemos tristes. :-(&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyCon Chicago 2009</title>
      <link>http://localhost:1313/2009/04/pycon-chicago-2009/</link>
      <pubDate>Wed, 08 Apr 2009 18:26:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/04/pycon-chicago-2009/</guid>
      <description>&lt;p&gt;Hace algunos días que están disponibles &lt;a href=&#34;http://pycon.blip.tv/&#34;&gt;los videos&lt;/a&gt; (versión más &amp;ldquo;navegable&amp;rdquo; &lt;a href=&#34;http://pycon.blip.tv/posts?view=archive&amp;amp;nsfw=dc&#34;&gt;acá&lt;/a&gt;) de unas cuantas charlas de &lt;a href=&#34;http://us.pycon.org/2009/about/&#34;&gt;PyCon 2009 - Chicago&lt;/a&gt; (terminó hace unos pocos días), y como me apasionan este tipo de eventos, suelo dedicarle algún tiempo libre a ver las que más me interesan (que &amp;ldquo;filtro&amp;rdquo; por el título, no me queda otra).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://us.pycon.org/2009/about/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/SdztkYCttWI/AAAAAAAACP0/zvzoH0Gv4mg/s320/pycon2009.png&#34;&gt;&lt;/a&gt; Les dejo una lista de las más importantes según mi criterio* (aclaro, sin haberlas visto):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957417&#34;&gt;A Whirlwind Excursion through Writing a C Extension&lt;/a&gt;: Excelente charla, me viene en un momento justo, por decirlo de alguna manera, cuando quería meter algo de mano en &lt;a href=&#34;http://docs.python.org/extending/index.html&#34;&gt;Python desde C&lt;/a&gt;. Los slides y la charla en formato de texto están &lt;a href=&#34;http://nedbatchelder.com/text/whirlext.html&#34;&gt;acá&lt;/a&gt; (aunque obviamente no es lo mismo que el video de &lt;a href=&#34;http://nedbatchelder.com/site/&#34;&gt;Ned Batchelder&lt;/a&gt;). Se trata de una introducción bastante completa y sencilla a extender Python con C (por performance, por interacción con componentes nativos o por capricho). :-)&lt;br&gt;
Un detalle más que quiero agregar es que el proyecto &lt;a href=&#34;http://www.boost.org/&#34;&gt;Boost&lt;/a&gt; tiene una biblioteca &lt;a href=&#34;http://www.boost.org/doc/libs/1_38_0/libs/python/doc/index.html&#34;&gt;Boost.Python&lt;/a&gt; esto que hace todo &lt;a href=&#34;http://www.boost.org/doc/libs/1_38_0/libs/python/doc/tutorial/doc/html/index.html&#34;&gt;automágicamente&lt;/a&gt; (pero sólo sirve usando C++).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957282&#34;&gt;PyPy status talk.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957215&#34;&gt;Reinteract: a better way to interact with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957086&#34;&gt;Introduction to Python Profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1956957&#34;&gt;Python in a sandbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1952603&#34;&gt;Jython Progress&lt;/a&gt;: Bueno, me alegra saber que queda poco para que &lt;a href=&#34;http://www.jython.org/&#34;&gt;Jython&lt;/a&gt; se actualice a Python 2.5 de manera oficial. Básicamente pusieron el énfasis en compatibilidad, tienen unas cuantas mejoras bajo el capó y espero que lo saquen lo antes posible. Sun (Oracle ahora) está (estaba?) metiéndole fichas al desarrollo de Python en la JVM&amp;hellip; veremos qué pasa.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1949388&#34;&gt;Panel: Object Relational Mappers: Philosophies and Design Decisions.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1949281&#34;&gt;Python 2.6 and 3.0 compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1949237&#34;&gt;Dejavu: Language INtegrated Query for data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947542&#34;&gt;Dabo: Rich Client Web Applications in 100% Python&lt;/a&gt;: Miren el último cuarto de la charla, todo lo anterior es una gran intro de ventajas y desventajas de las desktop apps vs. browser apps, para hablar de una aplicación que parece muy piola (y que se integra con &lt;a href=&#34;http://dabodev.com/&#34;&gt;Dabo&lt;/a&gt;) para &amp;ldquo;lanzar&amp;rdquo; aplicaciones y que se actualizen automágicamente. Recomendable.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947511&#34;&gt;Concurrency and Distributed Computing with Python Today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947478&#34;&gt;The Browser Interface, Local Server (BILS) Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947431&#34;&gt;Keynote: Guido van Rossum&lt;/a&gt;: Es un groso, no hay ninguna duda&amp;hellip; pero siendo sincero me aburrió bastante, ya que no tocó ningún tema técnico, y fue un &amp;ldquo;gracias a la comunidad&amp;rdquo; de una hora.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947373&#34;&gt;Easy AI with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947354&#34;&gt;Introduction to Multiprocessing in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¡Puff! Son un montón, y revisando un poco los títulos, se ve que me interesaron los temas bien técnicos. Para cada uno tengo un motivo, pero en vez de gastarme escribiendo (el tiempo es tirano, je), prometo que a medida que las vaya viendo (cada una dura algo así como 40 minutos), voy a actualizar este post.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Artículo sobre Optimización en Software</title>
      <link>http://localhost:1313/2009/02/articulo-sobre-optimizacion-en-software/</link>
      <pubDate>Thu, 19 Feb 2009 01:04:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/02/articulo-sobre-optimizacion-en-software/</guid>
      <description>&lt;p&gt;En &lt;a href=&#34;http://www.shlomifish.org/philosophy/computers/optimizing-code-for-speed/&#34;&gt;este artículo&lt;/a&gt; el autor ( &lt;a href=&#34;http://www.shlomifish.org/&#34;&gt;Shlomi Fish&lt;/a&gt;) discute un poco sobre optimización de algoritmos, y está orientado bastante a lo pragmático, desmitificando (o intentando derribar) algunos viejos &amp;ldquo;axiomas&amp;rdquo; de la programación.&lt;/p&gt;
&lt;p&gt;Para mí fue muy interesante la introducción de la idea de que optimizar factores constantes en la complejidad de un algoritmo también sirve; es decir, no sólo reducir órdenes de magnitud como único objetivo al optimizar, sino que también es importante hacerlo en factores. Con lo cual tiende a derribar dentro de su criterio el mito de &amp;ldquo;O(N²) es igual a O(2N²)&amp;rdquo;, por ejemplo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>QT será licenciado como LGPL</title>
      <link>http://localhost:1313/2009/01/qt-sera-licenciado-como-lgpl/</link>
      <pubDate>Wed, 14 Jan 2009 13:34:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/01/qt-sera-licenciado-como-lgpl/</guid>
      <description>&lt;p&gt;Creo que es &lt;a href=&#34;http://www.qtsoftware.com/about/news/lgpl-license-option-added-to-qt&#34;&gt;la mejor noticia&lt;/a&gt; de los últimos (¿años?) con respecto al mundo del software libre en el escritorio: las bibliotecas de desarrollo &lt;a href=&#34;http://www.qtsoftware.com/&#34;&gt;QT&lt;/a&gt;, en su versión &lt;em&gt;desktop&lt;/em&gt; y &lt;em&gt;embedded&lt;/em&gt;, piedra fundamental de todo el entorno de escritorio &lt;a href=&#34;http://www.kde.org/&#34;&gt;KDE&lt;/a&gt; (y de &lt;a href=&#34;http://www.qtsoftware.com/qt-in-use&#34;&gt;muchísimas aplicaciones más&lt;/a&gt;), se distribuirá con licencia &lt;a href=&#34;http://www.gnu.org/copyleft/lgpl.html&#34;&gt;LGPL&lt;/a&gt;, a partir de su versión &lt;a href=&#34;http://www.qtsoftware.com/developer/preview-qt-4.5&#34;&gt;4.5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.qtsoftware.com/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/SW3qFlb4HYI/AAAAAAAAB2k/FEAr_r1PCNE/s400/lgpl-license-announcement.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ahora los programadores seremos libres de desarrollar aplicaciones cerradas (&amp;ldquo;comerciales&amp;rdquo;) o no con QT, tanto para móviles/smartphones ( &lt;a href=&#34;http://www.qtsoftware.com/products/device-creation/windows-ce/qt-for-windows-ce&#34;&gt;Windows CE&lt;/a&gt;, &lt;a href=&#34;http://www.qtsoftware.com/developer/technical-preview-qt-for-s60&#34;&gt;S60&lt;/a&gt;) y/o &lt;a href=&#34;http://www.qtsoftware.com/qt-in-use/target/qt-in-use/story/device&#34;&gt;dispositivos varios&lt;/a&gt; como para el escritorio (Windows, Linux, Mac, y más). No todos podíamos pagar &lt;a href=&#34;http://www.qtsoftware.com/products/appdev/pricing/pricing&#34;&gt;la licencia comercial de QT&lt;/a&gt; (no lo dice, pero era muy salada, por asiento y en euros), y nos perdíamos de usar una de las mejores bibliotecas de desarrollo de su tipo en existencia.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nvidia CUDA</title>
      <link>http://localhost:1313/2008/10/nvidia-cuda/</link>
      <pubDate>Fri, 24 Oct 2008 22:41:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/10/nvidia-cuda/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.nvidia.com/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/SQSmesw-xtI/AAAAAAAABRE/EhtnyF7zG6U/s320/nvidia_logo.jpg&#34;&gt;&lt;/a&gt; Estoy leyendo &lt;a href=&#34;http://www.linuxjournal.com/article/10184&#34;&gt;un artículo&lt;/a&gt; de la última &lt;a href=&#34;http://www.linuxjournal.com/&#34;&gt;Linux Journal&lt;/a&gt;, referido a la tecnología &lt;a href=&#34;http://www.nvidia.com/object/cuda_home.html&#34;&gt;CUDA&lt;/a&gt;, que sacó hace un tiempito nomás &lt;a href=&#34;http://www.nvidia.com/&#34;&gt;NVidia&lt;/a&gt;. Básicamente se trata de una plataforma de software (compilador + libs + soporte en hardware) para que cualquier programador pueda acceder al enorme poder de cálculo que tienen las tarjetas gráficas actuales, que es mucho mayor que las CPUs que se utilizan todos los días; se comenta que la mejora de performance es de ¡uno a dos órdenes de magnitud como regla general!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cómo Conectarse a Oracle desde Python en Ubuntu</title>
      <link>http://localhost:1313/2008/10/como-conectarse-a-oracle-desde-python-en-ubuntu/</link>
      <pubDate>Tue, 21 Oct 2008 11:57:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/10/como-conectarse-a-oracle-desde-python-en-ubuntu/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.python.org/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/SP5jz2hVtRI/AAAAAAAABQM/VE8eMfaV6eg/s320/python-powered-w-200x80.png&#34;&gt;&lt;/a&gt; Luego de luchar (y bastante) para acceder a una &lt;a href=&#34;http://www.oracle.com/database/index.html&#34;&gt;BD Oracle&lt;/a&gt; desde &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt;, me propuse escribir los pasos a realizar así quedan para la posteridad. Tengo entendido que el único driver que funciona bien para conectarse es el &lt;a href=&#34;http://python.net/crew/atuining/cx_Oracle/&#34;&gt;cx_Oracle&lt;/a&gt;, así que voy a tratar de explicar cómo se instala todo desde el comienzo, usando Ubuntu Hardy 8.04.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualización&lt;/strong&gt;: este método aún sirve sobre Ubuntu Lucid 10.04 y cx_Oracle 5.03.&lt;/p&gt;
&lt;p&gt;1. Instalación del Oracle InstantClient
Primero, hay que descargar el &lt;a href=&#34;http://www.oracle.com/technology/tech/oci/instantclient/index.html&#34;&gt;Oracle InstantClient&lt;/a&gt; para la plataforma Linux que se utilice (x86, x86_64, &lt;a href=&#34;http://www-03.ibm.com/technology/power/&#34;&gt;Power&lt;/a&gt;, &lt;a href=&#34;http://www.intel.com/design/itanium/manuals/iiasdmanual.htm&#34;&gt;Itanium&lt;/a&gt;, etc.) desde &lt;a href=&#34;http://www.oracle.com/technology/software/tech/oci/instantclient/index.html&#34;&gt;acá&lt;/a&gt; (es necesario registrarse, pero es gratuito). Los paquetes necesarios son &amp;ldquo;Instant Client Package - Basic Lite&amp;rdquo; y &amp;ldquo;Instant Client Package - SDK&amp;rdquo;. cx_Oracle debería funcionar con cualquiera de las versiones 9.x y 10.x, así que vamos a bajar la última versión de la serie 10.x (que en este momento es la 10.2.0.4).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Taller de Python en la UNLu</title>
      <link>http://localhost:1313/2007/09/taller-de-python-en-la-unlu/</link>
      <pubDate>Sun, 09 Sep 2007 14:08:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/09/taller-de-python-en-la-unlu/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/RuQBIZaDcRI/AAAAAAAAALA/iBg54GRqM5w/s1600-h/Logo.gif&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/RuQBIZaDcRI/AAAAAAAAALA/iBg54GRqM5w/s320/Logo.gif&#34;&gt;&lt;/a&gt; Hola!&lt;/p&gt;
&lt;p&gt;Les cuento de que tuve el honor de que la gente del &lt;a href=&#34;http://www.codes-unlu.com.ar/&#34;&gt;CODES&lt;/a&gt; (Centro Organizado de Estudiantes de Sistemas de la &lt;a href=&#34;http://www.unlu.edu.ar/&#34;&gt;Universidad Nacional de Luján&lt;/a&gt;) más la del &lt;a href=&#34;http://www.unlux.com.ar/&#34;&gt;UnluX&lt;/a&gt; (del cual soy parte), me invitó a llevar adelante un taller de programación Python para los alumnos de los primeros años de sistemas de dicha Universidad.&lt;/p&gt;
&lt;p&gt;Como no tuve tiempo de armar ninguna presentación como para tener de &amp;ldquo;apunte&amp;rdquo;, le pedí a &lt;a href=&#34;http://www.taniquetil.com.ar/plog/&#34;&gt;Facundo Batista&lt;/a&gt; el permiso para utilizar las que él armó para las &lt;a href=&#34;http://jornadas.grulic.org.ar/7/&#34;&gt;7JRSL de Córdoba&lt;/a&gt;. Creo que sólo le modifiqué la primera página y el fondo, sin embargo, &lt;a href=&#34;http://www.unlux.com.ar/doc/intro-python-unlu.odp&#34;&gt;acá están para descargar&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Administrador SQLite - SQLiteman</title>
      <link>http://localhost:1313/2007/09/administrador-sqlite-sqliteman/</link>
      <pubDate>Sun, 09 Sep 2007 13:48:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/09/administrador-sqlite-sqliteman/</guid>
      <description>&lt;p&gt;Buenas&amp;hellip; hace algún tiempo comenzamos a utilizar en desarrollos en estado &amp;ldquo;inicial&amp;rdquo; Bases de Datos &lt;a href=&#34;http://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt;&amp;hellip; ya sea porque &lt;a href=&#34;http://docs.python.org/lib/module-sqlite3.html&#34;&gt;Python tiene mucha facilidad&lt;/a&gt; para crear y laburar con este tipo de BD, porque nos parece rápida y de sencilla administración, y porque para hacer pruebas&amp;hellip; es bárbara. En fin, con SQLite, creás tu BD en un toque y te ponés a laburar.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/RuP7vJaDcPI/AAAAAAAAAKw/txL5pWceiAs/s1600-h/sqlite.gif&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/RuP7vJaDcPI/AAAAAAAAAKw/txL5pWceiAs/s400/sqlite.gif&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;El tema es que si bien uno tiene siempre a mano el administrador de línea de comandos (&amp;ldquo;sqlite3&amp;rdquo;) para hacer querys, ver la descripción de alguna que otra tabla, etc., muchas otras veces (más que nada cuando quiero hacer querys complejos, como joins de varias tablas) siento la falta de algún administrador SQLite pero en formato &lt;a href=&#34;http://es.wikipedia.org/wiki/IGU&#34;&gt;GUI&lt;/a&gt;&amp;hellip;. un montón de veces busqué y nunca encontré nada que me gustara.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Metaprogramación en Python</title>
      <link>http://localhost:1313/2007/08/metaprogramacion-en-python/</link>
      <pubDate>Sat, 04 Aug 2007 15:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/08/metaprogramacion-en-python/</guid>
      <description>&lt;p&gt;Python está bárbaro, es sencillo y todo&amp;hellip; siempre leí que era muy fácil hacer metaprogramming con él, pero el problema es que uno haga metaprogramming de una forma fácil en su mente. :-P&lt;/p&gt;
&lt;p&gt;Veamos, la función getattr(), disponible en el módulo __builtins__ (o sea, disponible en todo momento), me permite cambiar esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;def get_transportistas_custodia(id_custodia):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;#34;&amp;#34;&amp;#34; Devuelvo todos los transportistas que están relacionados con una custodia &amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  c = Custodia.objects.get(id=1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  # Necesito el conjunto de transportistas de la custodia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  return c.transportistacustodia_set.all()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;def get_asegurados_custodia(id_custodia):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;#34;&amp;#34;&amp;#34; Devuelvo todos los asegurados que están relacionados con una custodia &amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(lo malo es que tengo que hacer una función por cada tipo de empresa relacionada con custodia).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chusmeando SQLObject - Parte II</title>
      <link>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-ii/</link>
      <pubDate>Wed, 11 Jul 2007 13:50:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-ii/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.turbogears.org&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RpY3Hh9dfgI/AAAAAAAAAIA/mdQkfrguxEM/s400/g_gear.png&#34;&gt;&lt;/a&gt; Continuando el post de ayer, otra desventaja del sistema de persistencia de Django es que no soporta atributos en relaciones &amp;ldquo;Muchos a Muchos&amp;rdquo;. Un caso podría ser Usuario &amp;lt;&amp;ndash;&amp;gt; Rol, donde un Usuario puede tener varios Roles y a su vez un Rol ser referenciado por varios usuarios; además, necesito almacenar si alguna combinación usuario&amp;lt;-&amp;gt;rol está activa o no. El atributo booleano &amp;ldquo;activo&amp;rdquo; sería una propiedad por cada Usuario&amp;lt;-&amp;gt;Rol en particular, y esto es lo que no soporta Django con su ManyToManyField.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chusmeando SQLObject - Parte I</title>
      <link>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-i/</link>
      <pubDate>Tue, 10 Jul 2007 13:32:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-i/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RpTixI2NBII/AAAAAAAAAHw/IxLKiWwCU14/s1600-h/camadas.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RpTixI2NBII/AAAAAAAAAHw/IxLKiWwCU14/s400/camadas.jpg&#34;&gt;&lt;/a&gt; Aprovechando que el &lt;a href=&#34;http://es.wikipedia.org/wiki/Mapeo_objeto-relacional&#34;&gt;ORM&lt;/a&gt; en Python es noticia (ya que &lt;a href=&#34;http://www.osnews.com/story.php/18242/Canonical-Begins-Opening-up-Launchpad&#34;&gt;Canonical liberó&lt;/a&gt; &lt;a href=&#34;https://storm.canonical.com/&#34;&gt;Storm&lt;/a&gt;)&amp;hellip; comento un par de desventajas del framework para acceder a BDs desde &lt;a href=&#34;http://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; y cómo las soluciona &lt;a href=&#34;http://www.sqlobject.org/&#34;&gt;SQLObject&lt;/a&gt; (específicamente no lo usé, pero estuve leyendo algo&amp;hellip;)&lt;/p&gt;
&lt;p&gt;Al momento de laburar con Django y la forma en que maneja la BD (definición de los modelos) nos encontramos dos limitaciones graves:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;No soporte de herencia entre tablas. Es decir, si yo desde mi &amp;ldquo;mundo real&amp;rdquo; tengo que representar:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class Transporte():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   modelo = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   largo = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   ancho = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   patente = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class Auto(Vehiculo):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   tiene_baul = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class Camion(Vehiculo):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   tiene_semi = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;No puedo representar esto en Django, ya que no soporta herencia. Por lo tanto, se puede &amp;ldquo;simular&amp;rdquo; la herencia usando relaciones &amp;ldquo;uno a uno&amp;rdquo; o copiando y pegando. Con la primera
opción caímos en varios problemas, así que tuvimos que &amp;ldquo;copiar y pegar&amp;rdquo; las propiedades que deberían haber sido heredadas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Esto es groso... Banshee Media Server</title>
      <link>http://localhost:1313/2007/07/esto-es-groso-banshee-media-server/</link>
      <pubDate>Sun, 01 Jul 2007 18:09:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/07/esto-es-groso-banshee-media-server/</guid>
      <description>&lt;p&gt;Después de entrar en esta página, sobre un &lt;a href=&#34;http://joeshaw.org/banshee-web/&#34;&gt;servidor web de música&lt;/a&gt;, dije &amp;ldquo;es medio pobre, le falta algo de diseño&amp;hellip;pero&amp;hellip; funcionará?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Andá bárbaro!!! &lt;a href=&#34;http://joeshaw.org/banshee-web/&#34;&gt;Pruébenlo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Me imagino que no es el primero en existir, pero sinceramente me sorprendió el equipo de &lt;a href=&#34;http://banshee-project.org/Main_Page&#34;&gt;Banshee&lt;/a&gt; (un reproductor de música desarrollado en &lt;a href=&#34;http://www.mono-project.com/&#34;&gt;Mono)&lt;/a&gt;. Claro que está en desarrollo, pero parece que pronto reemplazo al Amarok (esperemos, pero si no tiene Crossfading no me cambio nada eh!).&lt;/p&gt;
&lt;p&gt;En &lt;a href=&#34;http://joeshaw.org/2007/06/27/477&#34;&gt;este post&lt;/a&gt; hay más detalles al respecto (el sonido viene por un plugin Flash y es controlado con Javascript).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Software de Profiling</title>
      <link>http://localhost:1313/2007/06/software-de-profiling/</link>
      <pubDate>Fri, 15 Jun 2007 02:47:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/06/software-de-profiling/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/RnIFQac5XBI/AAAAAAAAAHA/XRvuM30mwPE/s1600-h/101300834_945328f91e.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/RnIFQac5XBI/AAAAAAAAAHA/XRvuM30mwPE/s320/101300834_945328f91e.jpg&#34;&gt;&lt;/a&gt; Buenas&amp;hellip; leyendo &lt;a href=&#34;http://www.kaourantin.net/2007/02/limits-of-software-rendering.html&#34;&gt;este post&lt;/a&gt; sobre cómo se analizó el comportamiento a bajo nivel en el algoritmo de renderizado del &lt;a href=&#34;http://www.adobe.com/products/flash/about/&#34;&gt;Flash Player&lt;/a&gt; , me interesé sobre las herramientas que nombra y utiliza:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://developer.amd.com/calinux.jsp&#34;&gt;Code Analyst&lt;/a&gt; de AMD (recomendado para hacer Profiling sobre micros AMD).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.intel.com/cd/software/products/asmo-na/eng/vtune/239144.htm&#34;&gt;VTune&lt;/a&gt; de Intel (ídem para Intel).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En el caso del Code Analyst, está disponible para Linux y Windows (x86 y x86-64), y está disponible su código fuente (dice que es &amp;ldquo;open source&amp;rdquo;, no encontré bajo qué licencia). Estuve chusmeando las &lt;a href=&#34;http://developer.amd.com/assets/Linux_Summit_PJD_2007_v2.pdf&#34;&gt;diapositivas estas&lt;/a&gt;, la verdad que me sorprendió gratamente que exista este tipo de herramienta (digo, que parece ser de calidad, además de abierta y gratuita).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ubuntu GNU/Linux &#43; Python en Rio Negro</title>
      <link>http://localhost:1313/2007/05/ubuntu-gnulinux-python-en-rio-negro/</link>
      <pubDate>Wed, 30 May 2007 01:31:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/05/ubuntu-gnulinux-python-en-rio-negro/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/RlzaW6BURVI/AAAAAAAAAGI/zNc6p1s28C4/s1600-h/Escudo_COA_Rio_Negro_province_argentina.gif&#34;&gt;&lt;img alt=&#34;Escudo de Río Negro&#34; loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/RlzaW6BURVI/AAAAAAAAAGI/zNc6p1s28C4/s400/Escudo_COA_Rio_Negro_province_argentina.gif&#34;&gt;&lt;/a&gt; Holas&amp;hellip;&lt;/p&gt;
&lt;p&gt;Bueh, por fin puedo bloguear algo al respecto (tengo un ratito como para comentar algo), y además mi compañero de laburo &lt;a href=&#34;https://launchpad.net/%7Egepatino&#34;&gt;Gabriel Patiño&lt;/a&gt; pudo escribir algo el fin de semana al respecto y &lt;a href=&#34;http://www.solar.org.ar/spip.php?article447&#34;&gt;yo puedo linkearlo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fue un mes estresante, cansador&amp;hellip; pero contentos por el deber cumplido de tener que realizar el software para el escrutinio provisorio de una provincia argentina, &lt;a href=&#34;http://es.wikipedia.org/wiki/Provincia_de_R%C3%ADo_Negro&#34;&gt;Río Negro&lt;/a&gt;. Fueron varios componentes desarrollados, en distintos entornos ( &lt;a href=&#34;http://www.apache.org/&#34;&gt;Apache&lt;/a&gt;/ &lt;a href=&#34;http://es.wikipedia.org/wiki/Common_Gateway_Interface&#34;&gt;CGI&lt;/a&gt;, &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; + &lt;a href=&#34;http://www.blogger.com/www.pygtk.org&#34;&gt;PyGTK&lt;/a&gt; + &lt;a href=&#34;http://www.gtk.org/&#34;&gt;GTK&lt;/a&gt;, &lt;a href=&#34;http://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;, etc.), pero siempre sobre &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; GNU/Linux.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Artículos de Python &#43; Glade en Español</title>
      <link>http://localhost:1313/2007/04/articulos-de-python-glade-en-espanol/</link>
      <pubDate>Mon, 09 Apr 2007 16:36:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/04/articulos-de-python-glade-en-espanol/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/Rhpt-a42MNI/AAAAAAAAAFY/hlo9m4QO6aM/s1600-h/glade-preview.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/Rhpt-a42MNI/AAAAAAAAAFY/hlo9m4QO6aM/s400/glade-preview.png&#34;&gt;&lt;/a&gt; Para aquell@s gentes que están incursionando en el mundo de la programación, el lenguaje &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; es ideal para aprender. Y es normal que las primeras cosas que se quieran hacer sean ventanas con botones, menúes y demás. &lt;a href=&#34;http://www.gtk.org/&#34;&gt;GTK&lt;/a&gt; es una librería que permite hacer eso para varias plataformas, como Windows, Linux, Solaris y Mac OSX (con problemas de integración, pero funciona). Por último, &lt;a href=&#34;http://glade.gnome.org/&#34;&gt;Glade&lt;/a&gt; es un programa que sirve para crear las ventanas+botones+menúes+etc. de forma gráfica, &amp;ldquo;dibujando&amp;rdquo;, arrastrando y pegando componentes en una suerte de &amp;ldquo;vista de diseño&amp;rdquo; (al mejor estilo Visual Basic o Delphi).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pensá bien la Solución al Problema!</title>
      <link>http://localhost:1313/2007/04/pensa-bien-la-solucion-al-problema/</link>
      <pubDate>Thu, 05 Apr 2007 01:37:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/04/pensa-bien-la-solucion-al-problema/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://primates.ximian.com/%7Efederico/news-2007-03.html#gtkliststore-slow&#34;&gt;En este post&lt;/a&gt; se puede ver cómo la mala elección de un algoritmo para una determinada tarea puede hacer que tu programa, por más que esté escrito en un lenguaje &amp;ldquo;rápido&amp;rdquo; como C, sea muuuy lento.&lt;/p&gt;
&lt;p&gt;Gracias Federico por tu constante laburo en el &amp;ldquo;tunning&amp;rdquo; de GTK. :-D&lt;/p&gt;
&lt;p&gt;Moralejas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pensá bien qué vas a hacer antes de escribir. El algoritmo que elijas será determinante en la performance de tu programa; también es bueno saber (aunque sea someramente) qué hace &amp;ldquo;debajo del capó&amp;rdquo; tu lenguaje/framework/api/loquesea que haya debajo y que estés utilizando.&lt;/li&gt;
&lt;li&gt;Un mal algoritmo escrito en C es excesivamente lento comparado con un buen algoritmo escrito en Python, Perl o Ruby (lenguajes interpretados).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Saludos!&lt;br&gt;
Marcelo&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parseo de Archivos Binarios y Bugs</title>
      <link>http://localhost:1313/2007/01/parseo-de-archivos-binarios-y-bugs/</link>
      <pubDate>Mon, 22 Jan 2007 18:17:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/01/parseo-de-archivos-binarios-y-bugs/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://sam.zoy.org/zzuf/zzuf-logo.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://sam.zoy.org/zzuf/zzuf-logo.png&#34;&gt;&lt;/a&gt; Me parece interesante este post sobre la herramienta &lt;a href=&#34;http://sam.zoy.org/zzuf/&#34;&gt;zzuf&lt;/a&gt;, ya que según esta pequeña muestra es muy común que el parseo de archivos binarios falle (cuelgue de la aplicación o error fatal) ante el menor cambio de algún byte. Me hace acordar &lt;a href=&#34;http://internet.newsforge.com/article.pl?sid=04/11/01/1558216&amp;amp;tid=142&amp;amp;tid=143&amp;amp;tid=144&#34;&gt;cuando se hacían tests de la robustez&lt;/a&gt; de los navegadores web &lt;a href=&#34;http://lwn.net/Articles/107087/&#34;&gt;al hacer leer HTMLs &amp;ldquo;malos&amp;rdquo;&lt;/a&gt; a los navegadores.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://sam.zoy.org/blog/2007-01-16-exposing-file-parsing-vulnerabilities&#34;&gt;Exposing File Parsing Vulnerabilites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como reflexión, estaría bueno que haya algún equipo de Q&amp;amp;A dentro del mundo Open Source que tome aplicaciones y haga más &amp;ldquo;reportes&amp;rdquo; de este tipo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vi como editor de texto para notebooks</title>
      <link>http://localhost:1313/2007/01/vi-como-editor-de-texto-para-notebooks/</link>
      <pubDate>Sat, 06 Jan 2007 18:45:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/01/vi-como-editor-de-texto-para-notebooks/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.ngedit.com/2005/06/03/the-vi-input-model/&#34;&gt;Este blog&lt;/a&gt; lo dice todo. Estoy muy de acuerdo con él, y aunque no tengo notebook, soy mucho más productivo escribiendo código Python con &lt;a href=&#34;http://vim.sourceforge.net/&#34;&gt;Vi&lt;/a&gt; que con cualquier otro editor convencional.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://vim.sourceforge.net&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://vim.sourceforge.net/images/vim_header.gif&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Eso sí, cuesta aprenderlo, eh! (Yo era uno de ésos que lo defenestraba&amp;hellip;. pero debo hacer un mea culpa y reivindicar al pobre Vi.) :-D&lt;/p&gt;
&lt;p&gt;Saludos&lt;br&gt;
Marcelo&lt;/p&gt;</description>
    </item>
    <item>
      <title>SWT ahora se porta como un .jar</title>
      <link>http://localhost:1313/2006/12/swt-ahora-se-porta-como-un-jar/</link>
      <pubDate>Mon, 18 Dec 2006 12:54:00 +0000</pubDate>
      <guid>http://localhost:1313/2006/12/swt-ahora-se-porta-como-un-jar/</guid>
      <description>&lt;p&gt;Hace un tiempo, basado en la experiencia que tuve y tengo haciendo soft con GUIs, al utilizar &lt;a href=&#34;http://java.sun.com/&#34;&gt;Java&lt;/a&gt; se me plantearon las dos alternativas serias que existen en el lenguaje: &lt;a href=&#34;http://en.wikipedia.org/wiki/Java_Swing&#34;&gt;Swing&lt;/a&gt; y &lt;a href=&#34;http://www.eclipse.org/swt/&#34;&gt;SWT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si bien el tema es motivo de &amp;quot; &lt;a href=&#34;http://es.wikipedia.org/wiki/Flamer&#34;&gt;guerra santa&lt;/a&gt;&amp;quot; permanente entre la gente que está a favor de &lt;a href=&#34;http://www.sun.com/&#34;&gt;Sun&lt;/a&gt;, &lt;a href=&#34;http://www.netbeans.org/&#34;&gt;Netbeans&lt;/a&gt; y por último, Swing contra la de &lt;a href=&#34;http://www.ibm.com/&#34;&gt;IBM&lt;/a&gt;, &lt;a href=&#34;http://www.eclipse.org/&#34;&gt;Eclipse&lt;/a&gt; y &lt;a href=&#34;http://en.wikipedia.org/wiki/Standard_Widget_Toolkit&#34;&gt;SWT&lt;/a&gt;, yo probé un poquito de las dos. Me gustó más SWT, más que nada porque Swing se veía horrible y lento en Linux (y no me parece cambiar de SO por ese motivo). Así que, como el que tenía la decisión era yo, hice entre otras cosas chiquitas, un programita para enviar SMS a través de internet a los celulares de Argentina, &lt;a href=&#34;http://smsar.sourceforge.net/&#34;&gt;Sonar&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Applets y LiveConnect en Firefox</title>
      <link>http://localhost:1313/2006/11/applets-y-liveconnect-en-firefox/</link>
      <pubDate>Fri, 24 Nov 2006 12:13:00 +0000</pubDate>
      <guid>http://localhost:1313/2006/11/applets-y-liveconnect-en-firefox/</guid>
      <description>&lt;p&gt;Holas. Ultimamente estuve metiendo mano en un &lt;a href=&#34;http://en.wikipedia.org/wiki/Java_applet&#34;&gt;Applet de Java&lt;/a&gt; embebido en un Sistema Web, que entre otras cosas, lo que hacía era ejecutar lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import java&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;applet&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Applet;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import netscape&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;javascript&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;JSException;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import netscape&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;javascript&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;JSObject;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;public &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; imprimesecescape01 &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; Applet {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  public void paint(Graphics g) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;....&lt;/span&gt; código Java haciendo lo que hace el Applet &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; Al finalizar:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      try {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          JSObject jsobject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JSObject&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getWindow(this);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; windowClose es una función Javascript que
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; está en el HTML que sólo llama a window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          jsobject&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;call(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;windowClose&amp;#34;&lt;/span&gt;, null);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      } catch(JSException jsexception) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          g&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drawString(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;caught JS: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; jsexception, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es decir, este Applet utiliza las clases de &lt;a href=&#34;http://en.wikipedia.org/wiki/LiveConnect&#34;&gt;LiveConnect&lt;/a&gt; del navegador para llamar a la función &lt;a href=&#34;http://en.wikipedia.org/wiki/Javascript&#34;&gt;JavaScript&lt;/a&gt; windowClose() residente en el HTML, que a su vez llama a window.close(). Todo para que, una vez que se ejecutó el código del applet, se cierre la ventana.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Servidor de Logs Remotos - Syslog-ng</title>
      <link>http://localhost:1313/2006/10/servidor-de-logs-remotos-syslog-ng/</link>
      <pubDate>Wed, 11 Oct 2006 12:31:00 +0000</pubDate>
      <guid>http://localhost:1313/2006/10/servidor-de-logs-remotos-syslog-ng/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.balabit.com/products/syslog-ng/&#34;&gt;Syslog-ng&lt;/a&gt; es un demonio de syslog infinitamente más flexible que el syslog &amp;ldquo;común&amp;rdquo; (tomado de BSD). Permite aplicar filtros, clasificar de acuerdo a distintos orígenes y enviar a diferentes destinos los logs. Para gestionar un servidor de logs, es muy fácil.&lt;/p&gt;
&lt;p&gt;Sólo fue cuestión de leer &lt;a href=&#34;http://www.debian-administration.org/articles/24&#34;&gt;esta guia&lt;/a&gt; y darle &amp;ldquo;apt-get install syslog-ng&amp;rdquo; y listo. Esto reemplaza al syslog anterior, pero la configuración del syslog-ng es la misma (en cuanto a funcionalidad, no en cuanto a sintaxis) que la de un debian recién instalado.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Escupiendo hojas en Linux</title>
      <link>http://localhost:1313/2006/09/escupiendo-hojas-en-linux/</link>
      <pubDate>Sun, 17 Sep 2006 18:29:00 +0000</pubDate>
      <guid>http://localhost:1313/2006/09/escupiendo-hojas-en-linux/</guid>
      <description>&lt;p&gt;Holaaa!&lt;/p&gt;
&lt;p&gt;En estos últimos días de silencio bloguero me enganché en unos proyectos de desarrollo en &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; (primero y por ahora) y el segundo (todavía no lo ví) en &lt;a href=&#34;http://www.php.net/&#34;&gt;PHP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo primero que tuve que resolver fue hacer que una impresora &lt;a href=&#34;http://www.epson.com.ar/asp/muestraProducto.asp?idProducto=C11C616031&#34;&gt;Epson C67&lt;/a&gt; imprimiese lo más rápido posible, y en modo gráfico (como para ponerlo en modo draft, mínimo). La gente había investigado dos opciones, una era abriendo el puerto /dev/usblp0 directamente, tratando de enviar la inicialización&amp;hellip; miraron (y miré yo también) bastante código de CUPS, de sus filtros (en C)&amp;hellip; tratando de entender el lenguaje EJL, cambiarlo a &lt;a href=&#34;http://en.wikipedia.org/wiki/IEEE_1284&#34;&gt;IEEE 1284.4&lt;/a&gt; y después a ESCP/2&amp;hellip; fue imposible. Hay muy poca documentación y lo máximo que se logró fue que tomara la hoja, pero nada más. Si alguien quiere documentación, &lt;a href=&#34;http://undocprint.printassociates.com/formats/printer_control_languages/ejl&#34;&gt;acá&lt;/a&gt; tiene algo más.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Un Poco de Cada Cosa</title>
      <link>http://localhost:1313/2006/08/un-poco-de-cada-cosa/</link>
      <pubDate>Fri, 01 Sep 2006 00:37:00 +0000</pubDate>
      <guid>http://localhost:1313/2006/08/un-poco-de-cada-cosa/</guid>
      <description>&lt;p&gt;Empezamos el día haciendo un pequeño relevamiento de los sitios &lt;a href=&#34;http://joomla.org/&#34;&gt;Joomla&lt;/a&gt; que administro. Primero, actualizando a la nueva &lt;a href=&#34;http://www.joomla.org/content/view/1843/74/&#34;&gt;versión 1.0.11&lt;/a&gt;, ya que corrige algunas vulnerabilidades críticas (y algunas que no lo son tanto). Y segundo, más hincha (pero hay que hacerlo), es revisar de los 6 sitios que tengo, qué componentes hay que actualizar, reemplazar o verificar si hay alguna vulnerabilidad grave.&lt;/p&gt;
&lt;p&gt;El resumen fue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Componente SEF404 desactualizado (reemplazar por &lt;a href=&#34;http://www.open-sef.org/&#34;&gt;OpenSEF&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Revisar &lt;a href=&#34;http://coders.mlshomequest.com/&#34;&gt;samSiteMap&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Actualizar &lt;a href=&#34;http://www.zoomfactory.org/&#34;&gt;zOOm Media Gallery&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
