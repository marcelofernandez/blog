<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Python on El Blog de Marcelo!</title>
    <link>http://localhost:1313/category/python/</link>
    <description>Recent content in Python on El Blog de Marcelo!</description>
    <generator>Hugo -- 0.147.0</generator>
    <language>es</language>
    <lastBuildDate>Tue, 27 Feb 2018 03:38:25 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/category/python/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Taller de Programación de Sockets TCP/IP</title>
      <link>http://localhost:1313/2018/02/taller-programacion-de-sockets-tcp-ip/</link>
      <pubDate>Tue, 27 Feb 2018 03:38:25 +0000</pubDate>
      <guid>http://localhost:1313/2018/02/taller-programacion-de-sockets-tcp-ip/</guid>
      <description>&lt;p&gt;En este mes de febrero tuve la suerte de llevar adelante en la UNLu un breve pero conciso taller de programación de sockets basado en Python. Dejo los slides, ejemplos de código y ejercicios planteados en el apartado de &lt;a href=&#34;http://localhost:1313/charlas/&#34;&gt;Charlas&lt;/a&gt; de mi blog, y en este post.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clase 1: Introducción Sockets API. Modelo OSI, entornos de ejecución.Introducción a Python. Socket API para UDP. Ejercicios.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C1.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C1.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Código de ejemplo: &lt;a href=&#34;http://marcelofernandez.info/sockets/code/Clase%201%20-%20UDP.zip&#34;&gt;ZIP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clase 2: Socket API para TCP. Código de ejemplo y ejercicios.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C2.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C2.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clase 3: Multiprogramación, concurrencia, paralelismo. Syscall fork() y relacionados. Ejemplos de servidor multiproceso. Procesos vs. Threads.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C3.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C3.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Código de ejemplo: &lt;a href=&#34;http://marcelofernandez.info/sockets/code/Clase%203%20-%20Procesos.zip&#34;&gt;ZIP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clase 4: Sockets asincrónicos. Modelo de trabajo, syscall select(). Ejemplos de código. Introducción a Scapy.
&lt;ul&gt;
&lt;li&gt;Descargar en Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C4.odp&#34;&gt;ODP&lt;/a&gt; / Formato &lt;a href=&#34;http://marcelofernandez.info/sockets/slides/Taller%20Sockets-C4.pdf&#34;&gt;PDF&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Código de ejemplo: &lt;a href=&#34;http://marcelofernandez.info/sockets/code/Clase%204%20-%20Select.zip&#34;&gt;ZIP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¡Saludos!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pwning hardware</title>
      <link>http://localhost:1313/2014/11/pwning-hardware/</link>
      <pubDate>Sat, 01 Nov 2014 16:00:51 +0000</pubDate>
      <guid>http://localhost:1313/2014/11/pwning-hardware/</guid>
      <description>&lt;p&gt;El video dura media hora, pero a mí me gustó muchísimo, aprendí mucho. &lt;a href=&#34;http://scanlime.org/&#34; title=&#34;Scanlime - One girl&#39;s diary of improvisational engineering&#34;&gt;Mikah Scott&lt;/a&gt; es &lt;a href=&#34;http://scanlime.org/resume/&#34; title=&#34;Mikah Scott - Resume&#34;&gt;una&lt;/a&gt; &lt;a href=&#34;http://www.misc.name/&#34; title=&#34;Micah Scott Art Portfolio&#34;&gt;genia&lt;/a&gt;, y se propone investigar cómo customizar el firmware de una lectora/grabadora de CD/DVD/Blu-Ray, para dominarlo por completo, empezando por el microcontrolador ARM que posee. Por ejemplo, moviendo el láser en la posición que uno quiera y dispararlo. Habla un excelente y puntilloso inglés, así que se le entiende palabra por palabra, sugiero que lo vean incluso para practicar su inglés técnico.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Algunos videos de PyCon US 2013</title>
      <link>http://localhost:1313/2013/03/algunos-videos-de-pycon-us-2013/</link>
      <pubDate>Thu, 21 Mar 2013 12:29:11 +0000</pubDate>
      <guid>http://localhost:1313/2013/03/algunos-videos-de-pycon-us-2013/</guid>
      <description>&lt;p&gt;Ya están subiéndose al sitio &lt;a href=&#34;http://pyvideo.org/&#34; title=&#34;Python related video indexed so you can find it&#34;&gt;PyVideo&lt;/a&gt; los videos de la &lt;a href=&#34;https://us.pycon.org/2013/&#34; title=&#34;PyCon US 2013&#34;&gt;PyCon US 2013&lt;/a&gt; que está cerrando hoy. Algunas de las charlas que quería compartir, de temas que son particularmente de mi interés, son:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1739/pypy-without-the-gil&#34; title=&#34;PyPy without the GIL&#34;&gt;PyPy without the GIL - Armin Rigo&lt;/a&gt;&lt;/strong&gt;:
PyPy has a version without the Global Interpreter Lock (GIL). It can run multiple threads concurrently. But the real benefit is that you have other, new ways of using all your cores. In this talk I will describe how it is possible (STM) and then focus on some of these new opportunities, e.g. show how we used multiple cores in a single really big program without adding thread locks everywhere.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/Q9wf63flICs?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
**&lt;a href=&#34;http://pyvideo.org/video/1770/python-profiling&#34; title=&#34;Python Profiling Talk&#34;&gt;Python Profiling - Amjith Ramanujam&lt;/a&gt;&lt;strong&gt;:
This talk will give a tour of different profiling techniques available for Python applications. We&amp;rsquo;ll cover specific modules in Python for doing function profiling and line level profiling. We&amp;rsquo;ll show the short comings of such mechanisms in production and discuss how to do sampled profiling of specific functions. We&amp;rsquo;ll finish with statistical profilers that use thread stack interrogation.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/QJwVYlDzAXs?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1773/making-apache-suck-less-for-hosting-python-web-ap&#34; title=&#34;Making Apache suck less for hosting Python web apps&#34;&gt;Making Apache suck less for hosting Python web applications - Graham Dumpleton&lt;/a&gt;&lt;strong&gt;:
It is not hard to find developers who will tell you that Apache sucks for running Python web applications. Is there a valid basis to such claims or have they simply been misguided by the views of others? This talk will endeavor to shine a light on the realities of and limitations in working with Apache, as well as the challenges in implementing the mod_wsgi module for Apache.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/k6Erh7oHvns?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1762/using-futures-for-async-gui-programming-in-python&#34; title=&#34;Using futures for async GUI programming in Python 3.3&#34;&gt;Using futures for async GUI programming in Python 3.3 - Dino Viehland&lt;/a&gt;&lt;strong&gt;:
In Python 3.2 a new feature was added for concurrent programming - futures. In Python 3.3 generators have been extended to allow returning from a generator with a value. In this talk we&amp;rsquo;ll show how these features can be combined to create a rich and easy to use asynchronous programming model which can be used for creating highly responsive GUI applications or easy async programming.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/oJQdX_w1vXY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1701/kivy-building-gui-and-mobile-apps-with-python&#34; title=&#34;Kivy Talk&#34;&gt;Kivy: Building GUI and Mobile apps with Python - Mathieu Virbel / Thomas Hansen&lt;/a&gt;&lt;strong&gt;:
This talk will introduce the Kivy project (&lt;a href=&#34;http://kivy.org&#34;&gt;http://kivy.org&lt;/a&gt;). Kivy’s mission is to make building graphical user interfaces on any device fun, efficient, and pythonic.
The talk will focus on giving attendees an overview of how they can use kivy to build exiting UIs and mobile apps.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/yPWj6k5MRak?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/strong&gt;&lt;a href=&#34;http://pyvideo.org/video/1798/make-more-responsive-web-applications-with-socket&#34; title=&#34;Make More Responsive Web Applications with SocketIO and gevent&#34;&gt;Make More Responsive Web Applications with SocketIO and gevent - Luke Sneeringer&lt;/a&gt;**:
An explanation of how to implement a socket.io server in Python to serve websocket requests from browsers.
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/TH-ZCuOdrQE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyConAr 2012: Charla sobre el protocolo SPDY – Video</title>
      <link>http://localhost:1313/2013/01/pyconar-2012-charla-sobre-el-protocolo-spdy-video/</link>
      <pubDate>Wed, 02 Jan 2013 18:53:28 +0000</pubDate>
      <guid>http://localhost:1313/2013/01/pyconar-2012-charla-sobre-el-protocolo-spdy-video/</guid>
      <description>&lt;p&gt;Con el nuevo año, aparecieron en su totalidad los &lt;a href=&#34;http://www.youtube.com/user/mreingart/videos&#34; title=&#34;Videos PyConAr 2012&#34;&gt;videos de la PyConAr 2012&lt;/a&gt; subidos a Youtube por Mariano Reingart, el Coordinador del evento.&lt;/p&gt;
&lt;p&gt;Dejo en este post el mío, no sin un dejo de &amp;ldquo;vergüencita&amp;rdquo;, je&amp;hellip; (encima todavía no lo vi):&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/BCB2Vbw-XJQ?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;p&gt;Cualquier duda me pueden consultar o comentar este mismo post. Espero próximamente escribir más en profundidad de ciertos aspectos que me quedaron afuera de la charla.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyConAr 2012: Charla sobre el protocolo SPDY - Slides</title>
      <link>http://localhost:1313/2012/11/pyconar-2012-charla-sobre-el-protocolo-spdy-slides/</link>
      <pubDate>Mon, 19 Nov 2012 16:08:12 +0000</pubDate>
      <guid>http://localhost:1313/2012/11/pyconar-2012-charla-sobre-el-protocolo-spdy-slides/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://ar.pycon.org/2012/&#34; title=&#34;PyCon Argentina 2012&#34;&gt;&lt;img alt=&#34;PyCon Argentina 2012&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2012/11/header_pyconar2012.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/wp-content/uploads/2012/11/spdy.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2012/11/spdy-150x150.png&#34;&gt;&lt;/a&gt; Terminó la &lt;a href=&#34;http://ar.pycon.org/2012/&#34; title=&#34;PyCon Argentina 2012&#34;&gt;PyCon Argentina 2012&lt;/a&gt;, y con ella vienen semanas menos movidas (espero). Este post es para agradecer a la organización, Mariano, Juan BC, y a todos aquellos que concurrieron y compartieron conmigo este evento que tanto nos gusta a los fanáticos de este lenguaje de programación.&lt;/p&gt;
&lt;p&gt;Además, tuve el placer de dar una charla introductoria del protocolo SPDY, que pretende reemplazar a HTTP 1.1, y que muy probablemente ya estés usando sin darte cuenta. :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Investigando el protocolo SPDY</title>
      <link>http://localhost:1313/2012/07/investigando-el-protocolo-spdy/</link>
      <pubDate>Sun, 15 Jul 2012 15:57:22 +0000</pubDate>
      <guid>http://localhost:1313/2012/07/investigando-el-protocolo-spdy/</guid>
      <description>&lt;p&gt;Un tiempo atrás venía buscando áreas de investigación para estudiar, y me encontré con una interesante propuesta de Google, de renovar el ya &amp;ldquo;viejito pero cumplidor&amp;rdquo; protocolo &lt;a href=&#34;http://tools.ietf.org/html/rfc2616&#34; title=&#34;RFC 2616: HTTP/1.1&#34;&gt;HTTP 1.1&lt;/a&gt;, llamada &lt;a href=&#34;http://dev.chromium.org/spdy/spdy-whitepaper&#34; title=&#34;SPDY Whitepaper&#34;&gt;SPDY&lt;/a&gt; (no sin algo de sentido comercial, se nota).&lt;/p&gt;
&lt;p&gt;De ahí en adelante (dado que el desarrollo &lt;a href=&#34;http://groups.google.com/group/spdy-dev&#34; title=&#34;SPDY-Dev Group&#34;&gt;es abierto&lt;/a&gt; a la discusión en general) me dediqué &lt;a href=&#34;http://dev.chromium.org/spdy/spdy-protocol/spdy-protocol-draft3&#34; title=&#34;SPDY v3 Protocol Specification&#34;&gt;a profundizar en él&lt;/a&gt;, entender sus ventajas (lo cual implica entender algunas cosas feas de HTTP 1.1 y la Web de hoy en día), limitaciones, y cosas que faltan implementar. Me apasionó el tema, tanto es así que lo propuse como tema de Tesis para mis estudios y hasta ahora vengo bien (bien con las promesas a mi Director, claro está :-P).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jornada de Python en Luján: PyDay Luján 2012</title>
      <link>http://localhost:1313/2012/03/jornada-de-python-en-lujan-pyday-lujan-2012/</link>
      <pubDate>Wed, 28 Mar 2012 13:29:04 +0000</pubDate>
      <guid>http://localhost:1313/2012/03/jornada-de-python-en-lujan-pyday-lujan-2012/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.pyday.com.ar/lujan2012&#34; title=&#34;Página del Evento: PyDay Luján 2012&#34;&gt;&lt;img alt=&#34;PyDay Luján 2012&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2012/03/python_lujan.png&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://www.python.org.ar&#34; title=&#34;PyAr&#34;&gt;PyAr&lt;/a&gt;, el grupo de usuarios de Python Argentina, está orgulloso de presentar una nueva Jornada del lenguaje de programación &lt;a href=&#34;http://es.wikipedia.org/wiki/Python&#34; title=&#34;Lenguaje de Programación Python&#34;&gt;Python&lt;/a&gt; 2012 ( &lt;a href=&#34;http://www.pyday.com.ar/lujan2012/&#34; title=&#34;PyDay Lujan 2012&#34;&gt;PyDay&lt;/a&gt;) en la &lt;a href=&#34;http://www.unlu.edu.ar&#34; title=&#34;Universidad Nacional de Luján&#34;&gt;Universidad Nacional de Luján&lt;/a&gt;, el día Sábado 5 de Mayo de 2012 de 11Hs a 18Hs.&lt;/p&gt;
&lt;p&gt;Durante el Python Day se darán pequeños cursos y charlas relacionadas a este lenguaje, creando un espacio en donde cualquier persona interesada pueda acercarse para preguntar, aprender y experimentar con esta herramienta.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Estableciendo conexiones HTTPS &#34;bien seguras&#34; en Python</title>
      <link>http://localhost:1313/2011/02/estableciendo-conexiones-https-bien-seguras-en-python/</link>
      <pubDate>Sat, 19 Feb 2011 19:45:55 +0000</pubDate>
      <guid>http://localhost:1313/2011/02/estableciendo-conexiones-https-bien-seguras-en-python/</guid>
      <description>&lt;p&gt;Hace unos días que tenía pendiente colgar esto acá, ya que a alguien en &lt;a href=&#34;http://www.python.org.ar&#34;&gt;PyAr&lt;/a&gt; &lt;a href=&#34;http://comments.gmane.org/gmane.org.user-groups.python.argentina/44953&#34;&gt;le fue útil&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://es.wikipedia.org/wiki/Https&#34;&gt;HTTPS&lt;/a&gt; es la manera de establecer conexiones HTTP pero &lt;em&gt;seguras&lt;/em&gt;, en el sentido de que previo al diálogo HTTP estándar pero luego de establecerse la conexión TCP contra el servidor, se negocia entre los participantes una conexión/sesión &amp;ldquo;especial&amp;rdquo; entre ambos.  Allí se intercambian certificados con el fin de autenticar contra quién se &amp;ldquo;está hablando&amp;rdquo;, para luego, si hubo éxito en la dicha comprobación, encriptar (o no) todo lo que va para el otro lado, tanto del Servidor al Cliente (generalmente un navegador), como del Cliente al Servidor.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navegador simple con wxPython &#43; Webkit/GTK</title>
      <link>http://localhost:1313/2010/10/navegador-simple-con-wxpython-webkitgtk/</link>
      <pubDate>Sun, 10 Oct 2010 01:28:54 +0000</pubDate>
      <guid>http://localhost:1313/2010/10/navegador-simple-con-wxpython-webkitgtk/</guid>
      <description>&lt;p&gt;Hace algunos posts (¡casi un año ya!) &lt;a href=&#34;http://localhost:1313/2009/11/navegador-simple-con-pywebkitgtk/&#34;&gt;escribí&lt;/a&gt; sobre una manera fácil y rápida de tener un componente &amp;ldquo;navegador web&amp;rdquo; en Python sobre Linux/BSD, gracias a &lt;a href=&#34;http://www.pygtk.org&#34;&gt;PyGTK&lt;/a&gt; y &lt;a href=&#34;http://webkitgtk.org/&#34;&gt;WebkitGTK&lt;/a&gt;, llamado lógicamente, &lt;a href=&#34;http://code.google.com/p/pywebkitgtk/&#34;&gt;pyWebkitGTK&lt;/a&gt;. En pocas líneas de código uno puede disponer de un navegador potente y completo en un panel de su aplicación basada en &lt;a href=&#34;http://www.pygtk.org&#34;&gt;PyGTK&lt;/a&gt;, ideal para integrar aún más la cada omnipresente Web.&lt;/p&gt;
&lt;p&gt;Las vueltas de la vida y las ganas de experimentar y aprender te llevan a probar otros frameworks/librerías, como lo es &lt;a href=&#34;http://www.wxpython.org&#34;&gt;wxPython&lt;/a&gt;; tanto es así que de vez en cuando tengo el placer de dar &lt;a href=&#34;http://localhost:1313/charlas/&#34;&gt;alguna charla&lt;/a&gt; al respecto &lt;a href=&#34;#nota1&#34;&gt;[1]&lt;/a&gt;, y una de las debilidades que le usualmente le encontraba es la falta de un componente &amp;ldquo;browser web&amp;rdquo; nativo y soportado en todas las plataformas (wxPython sólo incluye IE embebible como ActiveX en Windows).&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyDay Rafaela 2010 - Introducción a wxPython</title>
      <link>http://localhost:1313/2010/05/pyday-rafaela-2010-introduccion-a-wxpython/</link>
      <pubDate>Mon, 10 May 2010 17:32:48 +0000</pubDate>
      <guid>http://localhost:1313/2010/05/pyday-rafaela-2010-introduccion-a-wxpython/</guid>
      <description>&lt;p&gt;Para no ser menos que &lt;a href=&#34;http://www.juanjoconti.com.ar/2010/05/09/charla-entendiendo-decoradores-en-python/&#34;&gt;Juanjo&lt;/a&gt; y &lt;a href=&#34;http://fisadev.blogspot.com/2010/05/pyday-rafaela-2010_09.html&#34;&gt;Fisa&lt;/a&gt;, ¡qué bueno estuvo el &lt;a href=&#34;www.pyday.com.ar/rafaela2010/&#34;&gt;PyDay Rafaela 2010&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Muchos (muchos) asistentes, muy buena onda, y una chorizeada + fernet a la noche inolvidables&amp;hellip; En la sección de &lt;a href=&#34;http://localhost:1313/charlas/&#34;&gt;Charlas&lt;/a&gt; del blog están los &lt;a href=&#34;http://marcelofernandez.info/charlas/Introduccion%20a%20wxPython.pdf&#34;&gt;slides&lt;/a&gt; de mi &amp;ldquo;Introducción a wxPython&amp;rdquo;, más los &lt;a href=&#34;http://marcelofernandez.info/charlas/Introduccion%20a%20wxPython.zip&#34;&gt;ejemplos&lt;/a&gt; de rigor. También [hice propaganda](&lt;a href=&#34;http://marcelofernandez.info/charlas/Ubuntu&#34;&gt;http://marcelofernandez.info/charlas/Ubuntu&lt;/a&gt; Lightning Talk.pdf) de Ubuntu en las Lightning Talks. :-P&lt;/p&gt;
&lt;p&gt;Acá hay un par de fotos&amp;hellip; con los días van a ir apareciendo más cosas en el sito del evento&amp;hellip; incluso los videos de las charlas. :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Renderizando PDFs en Python con Poppler II</title>
      <link>http://localhost:1313/2010/04/renderizando-pdfs-en-python-con-poppler-ii/</link>
      <pubDate>Thu, 15 Apr 2010 18:04:29 +0000</pubDate>
      <guid>http://localhost:1313/2010/04/renderizando-pdfs-en-python-con-poppler-ii/</guid>
      <description>&lt;p&gt;Hace unos días me llegó un mail de alguien preguntándome cómo, a partir de la &lt;a href=&#34;http://localhost:1313/2009/05/renderizando-pdfs-en-python-con-poppler/&#34;&gt;parte I de este artículo&lt;/a&gt;, hacer un sencillo visor de PDFs con &lt;a href=&#34;http://www.wxpython.org&#34;&gt;wxPython&lt;/a&gt;. Me encontré con algunas dificultades, principalmente que el &lt;a href=&#34;www.wxpython.org/docs/api/wx.ScrolledWindow-class.html&#34;&gt;ScrolledWindow&lt;/a&gt; de wxPython no permite actualizarse dinámicamente, o automáticamente según el contenido (esto &lt;a href=&#34;http://www.pygtk.org/docs/pygtk/class-gtkadjustment.html&#34;&gt;sí es bastante sencillo en GTK&lt;/a&gt;); con lo cual se complicaba hacer zoom, modificar el tamaño de la ventana y adaptar los scrollbars, etc.&lt;/p&gt;
&lt;p&gt;Sin embargo, con alguna vuelta de más pude armar un ejemplo, que paso a dejar &lt;a href=&#34;http://code.activestate.com/recipes/577195-wxpython-pdf-viewer-using-poppler/&#34;&gt;acá&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reemplazando texto con expresiones regulares en Python</title>
      <link>http://localhost:1313/2010/04/reemplazando-texto-con-expresiones-regulares-en-python/</link>
      <pubDate>Fri, 02 Apr 2010 18:01:11 +0000</pubDate>
      <guid>http://localhost:1313/2010/04/reemplazando-texto-con-expresiones-regulares-en-python/</guid>
      <description>&lt;p&gt;Hay veces en que uno necesita automatizar tareas, como reemplazar cierto texto por otro bajo ciertas condiciones, y el viejo &amp;ldquo;%s/cosa/otra/g&amp;rdquo; &lt;a href=&#34;http://www.linux.com/learn/tutorials/8255-vim-tips-the-basics-of-search-and-replace&#34;&gt;del vim&lt;/a&gt; nos queda corto. En mi caso en particular, estaba metiendo algunas pequeñas características en &lt;a href=&#34;http://www.sistemasagiles.com.ar/trac/wiki/PyFpdf&#34;&gt;PyFpdf&lt;/a&gt;, y vi que había &lt;a href=&#34;http://www.sistemasagiles.com.ar/trac/browser/pyfpdf/font/times.py?rev=103&#34;&gt;algunos archivos .py&lt;/a&gt; llenos de llamadas a la función &lt;a href=&#34;http://docs.python.org/library/functions.html#chr&#34;&gt;chr()&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Claro, PyFpdf es un port más o menos &amp;ldquo;haragán&amp;rdquo; ( &lt;em&gt;lazy&lt;/em&gt;) de &lt;a href=&#34;http://www.fpdf.org/&#34;&gt;Fpdf para PHP&lt;/a&gt;, y el autor original evidentemente encontró más sencillo definir algunas fuentes (en binario) haciendo sucesivas llamadas a la función chr(), como  esta:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navegador simple con Python &#43; Webkit/GTK</title>
      <link>http://localhost:1313/2009/11/navegador-simple-con-pywebkitgtk/</link>
      <pubDate>Thu, 19 Nov 2009 21:56:12 +0000</pubDate>
      <guid>http://localhost:1313/2009/11/navegador-simple-con-pywebkitgtk/</guid>
      <description>&lt;p&gt;Hoy me encontré con otro &lt;a href=&#34;http://mx.grulic.org.ar/lurker/message/20091118.001651.3f9b4974.es.html&#34;&gt;un hilo en la lista de PyAr&lt;/a&gt; que me deja un link más que interesante: ¡Existe un binding para usar &lt;a href=&#34;http://code.google.com/p/pywebkitgtk/&#34;&gt;Webkit sobre GTK desde Python&lt;/a&gt;, y lo mejor de todo es que &lt;a href=&#34;http://packages.ubuntu.com/karmic/python-webkit&#34;&gt;ya está incluido en los repositorios&lt;/a&gt; de Ubuntu 9.10!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.webkit.org&#34;&gt;Webkit&lt;/a&gt; es un motor de &lt;a href=&#34;http://es.wikipedia.org/wiki/Renderizaci%C3%B3n&#34;&gt;renderizado&lt;/a&gt; (&amp;ldquo;dibujado&amp;rdquo;) de páginas web, que es utilizado en el corazón en cada vez más navegadores, como &lt;a href=&#34;http://www.google.com.ar/chrome&#34;&gt;Chrome&lt;/a&gt;, &lt;a href=&#34;http://www.apple.com/es/safari/&#34;&gt;Safari&lt;/a&gt;, &lt;a href=&#34;http://www.konqueror.org/&#34;&gt;Konqueror&lt;/a&gt;, etc. Es super completo y veloz; y permite ejecutarse en muchísimas plataformas y sistemas diferentes.  Si bien existen otros métodos para embeber un navegador en una aplicación PyGTK, como por ejemplo &lt;a href=&#34;http://www.pygtk.org/pygtkmozembed/class-gtkmozembed.html&#34;&gt;gtkmozembed&lt;/a&gt; (que embebe el motor de &lt;a href=&#34;http://www.mozilla-europe.org/es/firefox/&#34;&gt;Firefox&lt;/a&gt;), éste no es muy poderoso, o por lo menos no deja meterle mucha &amp;ldquo;mano&amp;rdquo; para personalizarlo, y uno termina teniendo relativamente muy poco &amp;ldquo;poder&amp;rdquo;. En cambio con Webkit/GTK se pueden hacer muchas más cosas, tan sólo hace falta ver la documentación y un ejemplo (links al final, claro). :-)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visor de Imágenes Simple con PyGTK</title>
      <link>http://localhost:1313/2009/11/visor-de-imagenes-simple-con-pygtk/</link>
      <pubDate>Mon, 16 Nov 2009 15:00:57 +0000</pubDate>
      <guid>http://localhost:1313/2009/11/visor-de-imagenes-simple-con-pygtk/</guid>
      <description>&lt;p&gt;Dado que alguien me pidió vía twitter un ejemplo de cómo hacer un zoom de una imagen en PyGTK, hice este ejemplito sencillo que sólo carga una imagen en un widget Gtk.Image.&lt;/p&gt;
&lt;p&gt;Maneja el movimiento de la imagen con el mouse, las teclas del cursor y hace zoom con F1 (&amp;ldquo;0 o adaptar a ventana&amp;rdquo;), F2 (+25%), F3 (+50%), F4(+75%) y F5(&amp;quot;%+100 o 1:1&amp;quot;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    SimpleImageViewer - Visor simple de imágenes, de ejemplo, que utiliza PyGTK.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Marcelo Fidel Fernández - http://www.marcelofernandez.info
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Licencia: BSD. Disponible en: http://www.freebsd.org/copyright/license.html
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    TODO:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        * Dar la opción de usar el scroll del mouse para hacer zoom.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        * Mejorar el código y peformance (quizás).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import pygtk
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pygtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2.0&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import gtk
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Variables globales para el ejemplo; podrían ir en un archivo de configuración,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# como por ejemplo &amp;#39;config.py&amp;#39; e importarlo.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mapeo de teclas - Ver constantes en el modulo gtk.keysyms&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keysyms as kb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Estructura: teclas (en mayúscula, contempla minúsculas también)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# (offset_X_pixeles, offset_Y_pixeles)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OFFSET_GRAL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MOVE_KEYS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Up : (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;OFFSET_GRAL), &lt;span style=&#34;color:#75715e&#34;&gt;# Arriba&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Down : (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,  OFFSET_GRAL), &lt;span style=&#34;color:#75715e&#34;&gt;# Abajo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Right : (OFFSET_GRAL, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),  &lt;span style=&#34;color:#75715e&#34;&gt;# Derecha&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Left : (&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;OFFSET_GRAL, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), &lt;span style=&#34;color:#75715e&#34;&gt;# Izquierda&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Estructura: tecla: nivel de zoom (zoom_ratio)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ZOOM_KEYS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F1: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F2: &lt;span style=&#34;color:#ae81ff&#34;&gt;25.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F3: &lt;span style=&#34;color:#ae81ff&#34;&gt;50.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F4: &lt;span style=&#34;color:#ae81ff&#34;&gt;75.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              kb&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;F5: &lt;span style=&#34;color:#ae81ff&#34;&gt;100.0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_IMAGE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/share/backgrounds/Cherries.jpg&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; SimpleImageViewer:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, image_file):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Window(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;WINDOW_TOPLEVEL)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;delete_event&amp;#34;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close_application)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_position(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;WIN_POS_CENTER_ALWAYS)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_default_size(&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf_new_from_file(image_file)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;float&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_width())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;float&lt;/span&gt;(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_height())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Image()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_from_pixbuf(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Viewport()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# No están por defecto, los agrego&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_events(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BUTTON_RELEASE_MASK &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BUTTON1_MOTION_MASK)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;button-press-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_button_pressed)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;button-release-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_button_released)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;motion-notify-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_mouse_moved)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Lo conecto a la ventana, ya que siempre tiene el foco&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key-press-event&amp;#39;&lt;/span&gt;, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;on_key_press)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scrolled_wnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ScrolledWindow()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scrolled_wnd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scrolled_wnd)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show_all()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_update_image&lt;/span&gt;(self, zoom_ratio):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Updates the image in the widget according to the zoom_ratio
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Actualiza la imagen en el widget Image con el zoom_ratio de parámetro
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# TODO: Prioriza que encaje el ancho por sobre el alto de la imagen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# al estar maximizado. Mejorar.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Obtengo las dimensiones actuales del viewport&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        rect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_allocation()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Resize de la imagen conservando las proporciones de la imagen&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ancho &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (base &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (zoom_ratio&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            relacion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            alto &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(ancho &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; relacion&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            alto &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (base &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (zoom_ratio&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            relacion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ancho_pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alto_pixbuf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ancho &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;(alto &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (relacion&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        scaled_buf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pixbuf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scale_simple(ancho, alto, gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;INTERP_BILINEAR)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_from_pixbuf(scaled_buf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_move_image&lt;/span&gt;(self, offset_x, offset_y):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Moves the image inside the viewport to the specified offset (+ or - pixels)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Mueve/Desplaza la imagen del viewport según el offset que se le especifique
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xadjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;props&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hadjustment
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; offset_x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        yadjust &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;props&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;vadjustment
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; offset_y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Si las cosas están dentro de los bordes, seteo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (newx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (newx &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; (xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;page_size)):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            xadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_hadjustment(xadjust)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (newy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; \
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (newy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; (yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upper &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;page_size)):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            yadjust&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            vport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_vadjustment(yadjust)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_key_press&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Callback to handle the keys pressed in the main window
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Callback que maneja las teclas que se presionan en la ventana
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        keycode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keyval_to_upper(event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keyval)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; keycode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; MOVE_KEYS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            offset_x, offset_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MOVE_KEYS[keycode]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_move_image(offset_x, offset_y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; keycode &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ZOOM_KEYS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_update_image(ZOOM_KEYS[keycode])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True &lt;span style=&#34;color:#75715e&#34;&gt;# Con True cancelo el evento&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_mouse_moved&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Callback to the mouse movement inside the viewport
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Callback que es llamado cuando el mouse se mueve en el viewport
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Ver: http://www.pygtk.org/pygtk2tutorial-es/sec-EventHandling.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_hint:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            x, y, state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_pointer()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;state
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;x_root, event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;y_root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BUTTON1_MASK:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            offset_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousex &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            offset_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousey &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_move_image(offset_x, offset_y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_button_pressed&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; When the user presses the left mouse button, save the x and y pixel positions,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            and change the cursor.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Cuando el usuario presiona el botón izquierdo, guardo los puntos x, y de
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            origen del evento y cambio el cursor a &amp;#34;moviéndose&amp;#34;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;button &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;change_vport_cursor(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Cursor(gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gdk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FLEUR))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;x_root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prevmousey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;y_root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;on_button_released&lt;/span&gt;(self, widget, event):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; When the user releases the left mouse button, set the normal cursor.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            Cuando el usuario suelta el botón izquierdo, vuelvo el cursor al normal &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; event&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;button &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;change_vport_cursor(None)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;change_vport_cursor&lt;/span&gt;(self, type):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;window&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_cursor(type)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;close_application&lt;/span&gt;(self, widget, event, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;None):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main_quit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        image_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        image_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DEFAULT_IMAGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    SimpleImageViewer(image_file)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gtk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Queda pendiente manejar el scroll del mouse para hacer zoom (ya que GTK mueve el gtk.Scrollwindow que contiene la imagen por defecto). Si bien funciona copiando y pegando esto en un archivo, también pueden descargar el ejemplo &lt;a href=&#34;http://www.marcelofernandez.info/files/image_viewer.py&#34;&gt;desde acá&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyCon Argentina 2009, Cappuccino y LLVM</title>
      <link>http://localhost:1313/2009/09/pycon-argentina-2009-cappuccino-y-llvm/</link>
      <pubDate>Mon, 14 Sep 2009 05:41:36 +0000</pubDate>
      <guid>http://localhost:1313/2009/09/pycon-argentina-2009-cappuccino-y-llvm/</guid>
      <description>&lt;p&gt;Me gustaría hacer un post bien largo acerca de todo lo que me dejó personalmente la última &lt;a href=&#34;http://ar.pycon.org/2009/about/&#34;&gt;PyCon Argentina&lt;/a&gt;, pero lamentablemente estoy complicado con el tiempo, ya que no sólo quiero leer y escribir acerca de todo el &amp;ldquo;bombardeo&amp;rdquo; de información que te deja cada charla, sino que también quisiera investigar un poco cada cosa y dejar acá algo más que solamente los links. Pero bueno, vamos a hacer el intento de resaltar lo primero que me viene a la mente.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Desensamblando Python</title>
      <link>http://localhost:1313/2009/08/desensamblando-python/</link>
      <pubDate>Sun, 30 Aug 2009 17:53:25 +0000</pubDate>
      <guid>http://localhost:1313/2009/08/desensamblando-python/</guid>
      <description>&lt;p&gt;Mucho no me gusta hacer posts con casi nada de aporte propio, pero en este caso se lo merece. Este post sólo va a referenciar al excelente sitio de &lt;a href=&#34;http://www.doughellmann.com/about/&#34;&gt;Doug Hellman&lt;/a&gt;, &lt;a href=&#34;http://www.doughellmann.com/PyMOTW/&#34;&gt;PyMOTW&lt;/a&gt; (Python Module of the Week). Básicamente el autor presenta una vez por semana un módulo de la biblioteca estándar de Python, realizando un análisis del mismo y mostrando ejemplos de uso.&lt;/p&gt;
&lt;p&gt;En particular, &lt;a href=&#34;http://www.doughellmann.com/PyMOTW/dis/&#34;&gt;esta semana&lt;/a&gt; hizo una introducción al módulo &lt;a href=&#34;http://docs.python.org/library/dis.html&#34;&gt;dis&lt;/a&gt;, que desensambla código Python mostrando el bytecode respectivo. Lo bueno es que muestra varios usos para el mismo (nuevos para mí), como en el caso de un debug o en el de optimizar el funcionamiento ahorrando bytecodes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyCon Argentina 2009: Abierta la Inscripción</title>
      <link>http://localhost:1313/2009/08/pycon-argentina-2009-abierta-la-inscripcion/</link>
      <pubDate>Sat, 15 Aug 2009 01:57:58 +0000</pubDate>
      <guid>http://localhost:1313/2009/08/pycon-argentina-2009-abierta-la-inscripcion/</guid>
      <description>&lt;p&gt;Sólo me voy a limitar a copiar el texto de la invitación&amp;hellip; de más está decir que espero ansioso los días para ir, y creo que va a estar &lt;strong&gt;buenísima&lt;/strong&gt;. Si sos programador o estás haciendo tus primeras armas en la programación, ¡no podés faltar!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://ar.pycon.org&#34;&gt;&lt;img alt=&#34;PyConAR-2009-banner-grande&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2009/08/PyConAR-2009-banner-grande.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Está abierta la inscripción para participar de PyCon Argentina 2009, la primera conferencia en castellano sobre el lenguaje de programación Python, a realizarse los días 4 y 5 de septiembre en la sede de la &lt;a href=&#34;http://maps.google.com/maps?f=q&amp;amp;source=s_q&amp;amp;hl=es&amp;amp;geocode=&amp;amp;q=zabala+1837,+buenos+aires&amp;amp;sll=-34.608418,-58.373161&amp;amp;sspn=0.279182,0.617294&amp;amp;ie=UTF8&amp;amp;ll=-34.562927,-58.444004&amp;amp;spn=0.008729,0.01929&amp;amp;t=h&amp;amp;z=16&amp;amp;iwloc=r0&#34;&gt;Universidad de Belgrano, Zabala 1837, en la Ciudad de Buenos Aires&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control de Versiones: Manejando las diferencias entre distribuido y centralizado</title>
      <link>http://localhost:1313/2009/07/control-de-versiones-manejando-las-diferencias-entre-distribuido-y-centralizado/</link>
      <pubDate>Sat, 25 Jul 2009 18:11:41 +0000</pubDate>
      <guid>http://localhost:1313/2009/07/control-de-versiones-manejando-las-diferencias-entre-distribuido-y-centralizado/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;VCSs&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2009/07/VCSs.png&#34;&gt;Dando vueltas &lt;a href=&#34;http://wxwidgets.blogspot.com/2009/07/playing-with-dvcs-for-wxwidgets.html&#34;&gt;por ahí&lt;/a&gt;, me entero que es muy sencillo utilizar localmente versionado de código fuente (gracias a los sistemas de control de versiones distribuidos, como por ejemplo &lt;a href=&#34;http://mercurial.selenic.com/wiki/&#34;&gt;Mercurial&lt;/a&gt;, &lt;a href=&#34;http://git-scm.com/&#34;&gt;GIT&lt;/a&gt; y &lt;a href=&#34;http://bazaar-vcs.org/&#34;&gt;Bazaar&lt;/a&gt;) para luego subir/actualizar los cambios a un repositorio &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;Subversion&lt;/a&gt; principal. Es decir, en vez de usar los comandos svn como clientes de un servidor Subversion, es posible utilizar alguno de estos sistemas distribuidos como clientes &amp;ldquo;consumidores&amp;rdquo; del repositorio principal, para luego aprovechar &lt;a href=&#34;http://en.wikipedia.org/wiki/Distributed_revision_control#Advantages&#34;&gt;sus importantes ventajas&lt;/a&gt; en forma local.&lt;/p&gt;</description>
    </item>
    <item>
      <title>¡Hola Mundo!</title>
      <link>http://localhost:1313/2009/05/hola-mundo/</link>
      <pubDate>Mon, 25 May 2009 00:36:39 +0000</pubDate>
      <guid>http://localhost:1313/2009/05/hola-mundo/</guid>
      <description>&lt;p&gt;Bueno, este es el primer post de mi blog sobre &lt;a href=&#34;http://www.wordpress.org&#34;&gt;Wordpress&lt;/a&gt; en dominio propio, &lt;a href=&#34;http://marcelofernandez.info&#34;&gt;marcelofernandez.info&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;No hace falta cambiar el &lt;a href=&#34;http://feeds2.feedburner.com/ElBlogDeMarcelo&#34;&gt;Feed RSS&lt;/a&gt;, ya que al hacerlo yo en &lt;a href=&#34;http://www.feedburner.com&#34;&gt;FeedBurner&lt;/a&gt;, directamente va a levantar los nuevos posts del dominio nuevo.&lt;/p&gt;
&lt;p&gt;El cambio lo hice estrictamente porque me cansé de esperar que Blogger avance&amp;hellip; es demasiado básico para un montón de cosas. Vamos a ver cómo nos va, por ahora me enamoré de Wordpress. :-)&lt;/p&gt;
&lt;p&gt;Saludos&lt;/p&gt;</description>
    </item>
    <item>
      <title>Renderizando PDFs en Python con Poppler</title>
      <link>http://localhost:1313/2009/05/renderizando-pdfs-en-python-con-poppler/</link>
      <pubDate>Sat, 02 May 2009 21:34:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/05/renderizando-pdfs-en-python-con-poppler/</guid>
      <description>&lt;p&gt;Buenas&amp;hellip; hoy voy a mostrar una forma de renderizar archivos PDF dentro de nuestras aplicaciones y desde Python, para casi cualquier plataforma con la estemos trabajando.&lt;/p&gt;
&lt;p&gt;Introducción
Si bien cuando se arma una aplicación de escritorio se suele &amp;ldquo;llamar&amp;rdquo; a un software externo ( &lt;a href=&#34;http://www.adobe.com/es/products/reader/&#34;&gt;Acrobat Reader&lt;/a&gt;, &lt;a href=&#34;http://www.foxitsoftware.com/pdf/reader/&#34;&gt;Fox-It&lt;/a&gt;, &lt;a href=&#34;http://projects.gnome.org/evince/&#34;&gt;Evince&lt;/a&gt;, etc.) para que muestre el contenido de un archivo &lt;a href=&#34;http://es.wikipedia.org/wiki/Pdf&#34;&gt;PDF&lt;/a&gt;, generalmente queda &amp;ldquo;feo&amp;rdquo;; nuestro programa pierde la interacción y el control de lo que el usuario hace con el mismo, implica superponer un programa arriba del otro, etc. Esto suele producir una experiencia dificultosa para el usuario de nuestro querido programa, y como corresponde, los programadores nos ponemos tristes. :-(&lt;/p&gt;</description>
    </item>
    <item>
      <title>Charla sobre Virtualización - Slides</title>
      <link>http://localhost:1313/2009/04/charla-sobre-virtualizacion-slides/</link>
      <pubDate>Tue, 28 Apr 2009 14:12:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/04/charla-sobre-virtualizacion-slides/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/SfcUJs61L5I/AAAAAAAACQ8/EbY7cCRVI_w/s1600-h/logo_bochs.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/SfcUJs61L5I/AAAAAAAACQ8/EbY7cCRVI_w/s320/logo_bochs.png&#34;&gt;&lt;/a&gt; Estos slides los estuve preparando para dar una charla sobre &lt;a href=&#34;http://es.wikipedia.org/wiki/Virtualizaci%C3%B3n&#34;&gt;virtualización&lt;/a&gt; en el último &lt;a href=&#34;http://www.flisol.info/FLISOL2009&#34;&gt;FLI&lt;/a&gt; &lt;a href=&#34;http://www.flisol.info/FLISOL2009&#34;&gt;SOL&lt;/a&gt; en la &lt;a href=&#34;http://www.unlu.edu.ar/&#34;&gt;UNLu&lt;/a&gt;. No se dio (¡era mucha gente para atender instalando máquinas! :-D), pero las subo acá por un lado, y por el otro no va a faltar la oportunidad en darla. Es más, estamos pensando seriamente en hacer algún &amp;ldquo;pequeño evento&amp;rdquo; en la UNLu no muy lejano para juntar charlas&amp;hellip;&lt;/p&gt;
&lt;p&gt;En fin, los slides en cuestión, están disponibles &lt;a href=&#34;http://marcelofernandez.info/charlas/Virtualizacion.odp&#34;&gt;aquí&lt;/a&gt; formato OpenOffice, y &lt;a href=&#34;http://marcelofernandez.info/charlas/Virtualizacion.pdf&#34;&gt;aquí&lt;/a&gt; en formato PDF.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flisol 2009</title>
      <link>http://localhost:1313/2009/04/flisol-2009/</link>
      <pubDate>Tue, 14 Apr 2009 15:51:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/04/flisol-2009/</guid>
      <description>&lt;p&gt;Este año, y como todos los años, se realiza el &lt;a href=&#34;http://www.flisol.info/&#34;&gt;Festival Latinoamericano de Instalacion de Software Libre&lt;/a&gt;, más conocido como &lt;a href=&#34;http://www.flisol.info/FLISOL2009/&#34;&gt;FLISOL&lt;/a&gt;. Yo voy a estar dando una mano en &lt;a href=&#34;http://www.flisol.info/FLISOL2009/Argentina/Lujan&#34;&gt;la que se realiza en la ciudad de Luján&lt;/a&gt;, sin embargo se realizan en un montón de ciudades del país y latinoamérica&amp;hellip; en fin, ¡los esperamos!&lt;br&gt;
&lt;a href=&#34;http://www.flisol.info/FLISOL2009/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/SeSxg3JY7YI/AAAAAAAACQU/y-YAR3yJYwc/s400/banner_flisol.png&#34;&gt;&lt;/a&gt; Va a haber alguna que otra charla, regalada de CDs, instalación de nuevos equipos y reunión del grupo del &lt;a href=&#34;http://www.unlux.com.ar/&#34;&gt;UNLuX&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyCon Chicago 2009</title>
      <link>http://localhost:1313/2009/04/pycon-chicago-2009/</link>
      <pubDate>Wed, 08 Apr 2009 18:26:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/04/pycon-chicago-2009/</guid>
      <description>&lt;p&gt;Hace algunos días que están disponibles &lt;a href=&#34;http://pycon.blip.tv/&#34;&gt;los videos&lt;/a&gt; (versión más &amp;ldquo;navegable&amp;rdquo; &lt;a href=&#34;http://pycon.blip.tv/posts?view=archive&amp;amp;nsfw=dc&#34;&gt;acá&lt;/a&gt;) de unas cuantas charlas de &lt;a href=&#34;http://us.pycon.org/2009/about/&#34;&gt;PyCon 2009 - Chicago&lt;/a&gt; (terminó hace unos pocos días), y como me apasionan este tipo de eventos, suelo dedicarle algún tiempo libre a ver las que más me interesan (que &amp;ldquo;filtro&amp;rdquo; por el título, no me queda otra).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://us.pycon.org/2009/about/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/SdztkYCttWI/AAAAAAAACP0/zvzoH0Gv4mg/s320/pycon2009.png&#34;&gt;&lt;/a&gt; Les dejo una lista de las más importantes según mi criterio* (aclaro, sin haberlas visto):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957417&#34;&gt;A Whirlwind Excursion through Writing a C Extension&lt;/a&gt;: Excelente charla, me viene en un momento justo, por decirlo de alguna manera, cuando quería meter algo de mano en &lt;a href=&#34;http://docs.python.org/extending/index.html&#34;&gt;Python desde C&lt;/a&gt;. Los slides y la charla en formato de texto están &lt;a href=&#34;http://nedbatchelder.com/text/whirlext.html&#34;&gt;acá&lt;/a&gt; (aunque obviamente no es lo mismo que el video de &lt;a href=&#34;http://nedbatchelder.com/site/&#34;&gt;Ned Batchelder&lt;/a&gt;). Se trata de una introducción bastante completa y sencilla a extender Python con C (por performance, por interacción con componentes nativos o por capricho). :-)&lt;br&gt;
Un detalle más que quiero agregar es que el proyecto &lt;a href=&#34;http://www.boost.org/&#34;&gt;Boost&lt;/a&gt; tiene una biblioteca &lt;a href=&#34;http://www.boost.org/doc/libs/1_38_0/libs/python/doc/index.html&#34;&gt;Boost.Python&lt;/a&gt; esto que hace todo &lt;a href=&#34;http://www.boost.org/doc/libs/1_38_0/libs/python/doc/tutorial/doc/html/index.html&#34;&gt;automágicamente&lt;/a&gt; (pero sólo sirve usando C++).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957282&#34;&gt;PyPy status talk.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957215&#34;&gt;Reinteract: a better way to interact with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1957086&#34;&gt;Introduction to Python Profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1956957&#34;&gt;Python in a sandbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1952603&#34;&gt;Jython Progress&lt;/a&gt;: Bueno, me alegra saber que queda poco para que &lt;a href=&#34;http://www.jython.org/&#34;&gt;Jython&lt;/a&gt; se actualice a Python 2.5 de manera oficial. Básicamente pusieron el énfasis en compatibilidad, tienen unas cuantas mejoras bajo el capó y espero que lo saquen lo antes posible. Sun (Oracle ahora) está (estaba?) metiéndole fichas al desarrollo de Python en la JVM&amp;hellip; veremos qué pasa.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1949388&#34;&gt;Panel: Object Relational Mappers: Philosophies and Design Decisions.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1949281&#34;&gt;Python 2.6 and 3.0 compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1949237&#34;&gt;Dejavu: Language INtegrated Query for data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947542&#34;&gt;Dabo: Rich Client Web Applications in 100% Python&lt;/a&gt;: Miren el último cuarto de la charla, todo lo anterior es una gran intro de ventajas y desventajas de las desktop apps vs. browser apps, para hablar de una aplicación que parece muy piola (y que se integra con &lt;a href=&#34;http://dabodev.com/&#34;&gt;Dabo&lt;/a&gt;) para &amp;ldquo;lanzar&amp;rdquo; aplicaciones y que se actualizen automágicamente. Recomendable.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947511&#34;&gt;Concurrency and Distributed Computing with Python Today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947478&#34;&gt;The Browser Interface, Local Server (BILS) Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947431&#34;&gt;Keynote: Guido van Rossum&lt;/a&gt;: Es un groso, no hay ninguna duda&amp;hellip; pero siendo sincero me aburrió bastante, ya que no tocó ningún tema técnico, y fue un &amp;ldquo;gracias a la comunidad&amp;rdquo; de una hora.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947373&#34;&gt;Easy AI with Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blip.tv/file/1947354&#34;&gt;Introduction to Multiprocessing in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¡Puff! Son un montón, y revisando un poco los títulos, se ve que me interesaron los temas bien técnicos. Para cada uno tengo un motivo, pero en vez de gastarme escribiendo (el tiempo es tirano, je), prometo que a medida que las vaya viendo (cada una dura algo así como 40 minutos), voy a actualizar este post.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Novedades en Firefox 3.1 beta (será 3.5)</title>
      <link>http://localhost:1313/2009/03/novedades-en-firefox-31-beta-sera-35/</link>
      <pubDate>Fri, 13 Mar 2009 00:45:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/03/novedades-en-firefox-31-beta-sera-35/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.mozilla.org/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/Sbm9wUh5i0I/AAAAAAAACMA/hZ19rzmamJk/s320/Firefoxlogo2.png&#34;&gt;&lt;/a&gt; Si bien la mayoría de los sitios de noticias tiene un enlace a &lt;a href=&#34;https://developer.mozilla.org/devnews/index.php/2009/03/12/firefox-31-beta-3-now-available-for-download/&#34;&gt;esta página&lt;/a&gt;, detallando las novedades más importantes y generales en la aplicación, me gustaría destacar algunas de las novedades &amp;ldquo;bajo el capó&amp;rdquo; del próximo Firefox 3.5, que se describen en &lt;a href=&#34;https://developer.mozilla.org/en/Firefox_3.1_for_developers&#34;&gt;esta otra página&lt;/a&gt; (&amp;ldquo;Firefox para desarrolladores web&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Veamos, las que me parecen más interesantes son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Soporte para los nuevos tags &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/#audio&#34;&gt;audio&lt;/a&gt; y &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/#video&#34;&gt;video&lt;/a&gt; del futuro (y en borrador todavía) &lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/&#34;&gt;HTML 5&lt;/a&gt; &lt;a href=&#34;https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox&#34;&gt;incluído&lt;/a&gt;. Lo interesante es que no sólo &lt;a href=&#34;https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Controlling_media_playback&#34;&gt;permite controlar la reproducción&lt;/a&gt; por Javascript (algo relativamente lógico), sino que también permite que &lt;a href=&#34;https://developer.mozilla.org/En/Manipulating_video_using_canvas&#34;&gt;Javascript procese y manipule la imagen mediante canvas&lt;/a&gt;. ¡ &lt;a href=&#34;http://www.0xdeadbeef.com/weblog/?p=1093&#34;&gt;Muy bueno&lt;/a&gt;! Un detalle es que por ahora soporta el formato &lt;a href=&#34;http://es.wikipedia.org/wiki/WAV&#34;&gt;WAV&lt;/a&gt; y &lt;a href=&#34;http://www.xiph.org/ogg/&#34;&gt;OGG&lt;/a&gt; únicamente.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Otra vez el Cambio de Horario en Ubuntu</title>
      <link>http://localhost:1313/2009/03/otra-vez-el-cambio-de-horario-en-ubuntu/</link>
      <pubDate>Tue, 10 Mar 2009 12:57:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/03/otra-vez-el-cambio-de-horario-en-ubuntu/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/trvr3307/224752387/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/SbZkYeipkjI/AAAAAAAACL4/U00MPcbKV2c/s320/224752387_1d26835f93_b.jpg&#34;&gt;&lt;/a&gt; Este post es sólo para comentar, amigos sysadmins, que &lt;a href=&#34;http://www.clarin.com/diario/2009/03/09/um/m-01873771.htm&#34;&gt;este domingo a las 00:00 hs. se &amp;ldquo;atrasará&amp;rdquo; una hora el reloj del lado este del país&lt;/a&gt;, y que todos aquellos que tengan actualizados el paquete &lt;a href=&#34;http://packages.ubuntu.com/search?keywords=tzdata&amp;amp;searchon=names&#34;&gt;tzdata&lt;/a&gt; van a tener actualizados el reloj automáticamente, a diferencia de otras oportunidades donde lo repentino de los caprichos las decisiones políticas hicieron que hubiera que hacer esto a mano.&lt;/p&gt;
&lt;p&gt;Para comprobar esto, pueden correr en la consola:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Artículo sobre Optimización en Software</title>
      <link>http://localhost:1313/2009/02/articulo-sobre-optimizacion-en-software/</link>
      <pubDate>Thu, 19 Feb 2009 01:04:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/02/articulo-sobre-optimizacion-en-software/</guid>
      <description>&lt;p&gt;En &lt;a href=&#34;http://www.shlomifish.org/philosophy/computers/optimizing-code-for-speed/&#34;&gt;este artículo&lt;/a&gt; el autor ( &lt;a href=&#34;http://www.shlomifish.org/&#34;&gt;Shlomi Fish&lt;/a&gt;) discute un poco sobre optimización de algoritmos, y está orientado bastante a lo pragmático, desmitificando (o intentando derribar) algunos viejos &amp;ldquo;axiomas&amp;rdquo; de la programación.&lt;/p&gt;
&lt;p&gt;Para mí fue muy interesante la introducción de la idea de que optimizar factores constantes en la complejidad de un algoritmo también sirve; es decir, no sólo reducir órdenes de magnitud como único objetivo al optimizar, sino que también es importante hacerlo en factores. Con lo cual tiende a derribar dentro de su criterio el mito de &amp;ldquo;O(N²) es igual a O(2N²)&amp;rdquo;, por ejemplo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>QT será licenciado como LGPL</title>
      <link>http://localhost:1313/2009/01/qt-sera-licenciado-como-lgpl/</link>
      <pubDate>Wed, 14 Jan 2009 13:34:00 +0000</pubDate>
      <guid>http://localhost:1313/2009/01/qt-sera-licenciado-como-lgpl/</guid>
      <description>&lt;p&gt;Creo que es &lt;a href=&#34;http://www.qtsoftware.com/about/news/lgpl-license-option-added-to-qt&#34;&gt;la mejor noticia&lt;/a&gt; de los últimos (¿años?) con respecto al mundo del software libre en el escritorio: las bibliotecas de desarrollo &lt;a href=&#34;http://www.qtsoftware.com/&#34;&gt;QT&lt;/a&gt;, en su versión &lt;em&gt;desktop&lt;/em&gt; y &lt;em&gt;embedded&lt;/em&gt;, piedra fundamental de todo el entorno de escritorio &lt;a href=&#34;http://www.kde.org/&#34;&gt;KDE&lt;/a&gt; (y de &lt;a href=&#34;http://www.qtsoftware.com/qt-in-use&#34;&gt;muchísimas aplicaciones más&lt;/a&gt;), se distribuirá con licencia &lt;a href=&#34;http://www.gnu.org/copyleft/lgpl.html&#34;&gt;LGPL&lt;/a&gt;, a partir de su versión &lt;a href=&#34;http://www.qtsoftware.com/developer/preview-qt-4.5&#34;&gt;4.5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.qtsoftware.com/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/SW3qFlb4HYI/AAAAAAAAB2k/FEAr_r1PCNE/s400/lgpl-license-announcement.jpeg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ahora los programadores seremos libres de desarrollar aplicaciones cerradas (&amp;ldquo;comerciales&amp;rdquo;) o no con QT, tanto para móviles/smartphones ( &lt;a href=&#34;http://www.qtsoftware.com/products/device-creation/windows-ce/qt-for-windows-ce&#34;&gt;Windows CE&lt;/a&gt;, &lt;a href=&#34;http://www.qtsoftware.com/developer/technical-preview-qt-for-s60&#34;&gt;S60&lt;/a&gt;) y/o &lt;a href=&#34;http://www.qtsoftware.com/qt-in-use/target/qt-in-use/story/device&#34;&gt;dispositivos varios&lt;/a&gt; como para el escritorio (Windows, Linux, Mac, y más). No todos podíamos pagar &lt;a href=&#34;http://www.qtsoftware.com/products/appdev/pricing/pricing&#34;&gt;la licencia comercial de QT&lt;/a&gt; (no lo dice, pero era muy salada, por asiento y en euros), y nos perdíamos de usar una de las mejores bibliotecas de desarrollo de su tipo en existencia.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dan Kaminsky en BlackHat 2008 - Japón</title>
      <link>http://localhost:1313/2008/12/dan-kaminsky-en-blackhat-2008-japon/</link>
      <pubDate>Sat, 27 Dec 2008 15:05:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/12/dan-kaminsky-en-blackhat-2008-japon/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.blackhat.com/presentations/bh-jp-08/bh-jp-08-Kaminsky/BlackHat-Japan-08-Kaminsky-DNS08-BlackOps.pdf&#34;&gt;Esta presentación&lt;/a&gt; es la única que me llamó la atención repasando &lt;a href=&#34;http://www.blackhat.com/html/bh-japan-08/brief-bh-jp-08-archives.html&#34;&gt;el archivo&lt;/a&gt; del &lt;a href=&#34;http://www.blackhat.com/html/bh-japan-08/bh-jp-08-main.html&#34;&gt;Black Hat de Octubre de este año en Japón&lt;/a&gt;. El ya conocido &lt;a href=&#34;http://www.doxpara.com/?page_id=1159&#34;&gt;Dan Kaminsky&lt;/a&gt; fue el keynote del evento, explicando no sólo (nuevamente) la vulnerabilidad de DNS descubierta por él este año, sino también qué se viene en general en materia de (in)seguridad informática.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.blackhat.com/html/bh-japan-08/bh-jp-08-main.html&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/SVZEa1_uKvI/AAAAAAAAB0o/oouIMK0iHIg/s400/hd_logo01.gif&#34;&gt;&lt;/a&gt;&lt;br&gt;
Son un montón de diapositivas (101!), unas cuantas las pasé por alto, pero son útiles; a modo de resumen, enumero los &amp;quot; &lt;em&gt;highlights&lt;/em&gt;&amp;quot;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Charlas de Software Libre en la Universidad Nacional de Luján</title>
      <link>http://localhost:1313/2008/11/charlas-de-software-libre-en-la-universidad-nacional-de-lujan/</link>
      <pubDate>Tue, 18 Nov 2008 22:08:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/11/charlas-de-software-libre-en-la-universidad-nacional-de-lujan/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.unlux.com.ar&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/SSM_HbbVlQI/AAAAAAAABtc/vXtkKkGJwmY/s320/unlux.jpg&#34;&gt;&lt;/a&gt; Bueno, este sábado 22 de Noviembre los muchachos del &lt;a href=&#34;http://www.unlux.com.ar/&#34;&gt;UNLuX&lt;/a&gt; (del cual soy orgullosamente integrante) hacen su 2do evento anual sobre tecnología y software libre&amp;hellip; a mí se me hace imposible ir por motivos personales (¡realmente un bajón!), pero espero que vayan, ¡va a estar más que interesante y va a haber muy buena onda!&lt;/p&gt;
&lt;p&gt;Resumo de su &lt;a href=&#34;http://unlux.com.ar/index.php?option=com_content&amp;amp;task=view&amp;amp;id=27&amp;amp;Itemid=1&#34;&gt;nota principal&lt;/a&gt;:&lt;br&gt;
&amp;ldquo;El Grupo de Usuarios de Software Libre de la Universidad Nacional de Luján ( &lt;a href=&#34;http://www.unlux.com.ar/&#34;&gt;UNLUX&lt;/a&gt;) invita a toda la comunidad educativa, profesionales e interesados en Tecnologías de la Información al &amp;ldquo;Ciclo de charlas UNLUX 2008&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nvidia CUDA</title>
      <link>http://localhost:1313/2008/10/nvidia-cuda/</link>
      <pubDate>Fri, 24 Oct 2008 22:41:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/10/nvidia-cuda/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.nvidia.com/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/SQSmesw-xtI/AAAAAAAABRE/EhtnyF7zG6U/s320/nvidia_logo.jpg&#34;&gt;&lt;/a&gt; Estoy leyendo &lt;a href=&#34;http://www.linuxjournal.com/article/10184&#34;&gt;un artículo&lt;/a&gt; de la última &lt;a href=&#34;http://www.linuxjournal.com/&#34;&gt;Linux Journal&lt;/a&gt;, referido a la tecnología &lt;a href=&#34;http://www.nvidia.com/object/cuda_home.html&#34;&gt;CUDA&lt;/a&gt;, que sacó hace un tiempito nomás &lt;a href=&#34;http://www.nvidia.com/&#34;&gt;NVidia&lt;/a&gt;. Básicamente se trata de una plataforma de software (compilador + libs + soporte en hardware) para que cualquier programador pueda acceder al enorme poder de cálculo que tienen las tarjetas gráficas actuales, que es mucho mayor que las CPUs que se utilizan todos los días; se comenta que la mejora de performance es de ¡uno a dos órdenes de magnitud como regla general!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cómo Conectarse a Oracle desde Python en Ubuntu</title>
      <link>http://localhost:1313/2008/10/como-conectarse-a-oracle-desde-python-en-ubuntu/</link>
      <pubDate>Tue, 21 Oct 2008 11:57:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/10/como-conectarse-a-oracle-desde-python-en-ubuntu/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.python.org/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/SP5jz2hVtRI/AAAAAAAABQM/VE8eMfaV6eg/s320/python-powered-w-200x80.png&#34;&gt;&lt;/a&gt; Luego de luchar (y bastante) para acceder a una &lt;a href=&#34;http://www.oracle.com/database/index.html&#34;&gt;BD Oracle&lt;/a&gt; desde &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt;, me propuse escribir los pasos a realizar así quedan para la posteridad. Tengo entendido que el único driver que funciona bien para conectarse es el &lt;a href=&#34;http://python.net/crew/atuining/cx_Oracle/&#34;&gt;cx_Oracle&lt;/a&gt;, así que voy a tratar de explicar cómo se instala todo desde el comienzo, usando Ubuntu Hardy 8.04.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualización&lt;/strong&gt;: este método aún sirve sobre Ubuntu Lucid 10.04 y cx_Oracle 5.03.&lt;/p&gt;
&lt;p&gt;1. Instalación del Oracle InstantClient
Primero, hay que descargar el &lt;a href=&#34;http://www.oracle.com/technology/tech/oci/instantclient/index.html&#34;&gt;Oracle InstantClient&lt;/a&gt; para la plataforma Linux que se utilice (x86, x86_64, &lt;a href=&#34;http://www-03.ibm.com/technology/power/&#34;&gt;Power&lt;/a&gt;, &lt;a href=&#34;http://www.intel.com/design/itanium/manuals/iiasdmanual.htm&#34;&gt;Itanium&lt;/a&gt;, etc.) desde &lt;a href=&#34;http://www.oracle.com/technology/software/tech/oci/instantclient/index.html&#34;&gt;acá&lt;/a&gt; (es necesario registrarse, pero es gratuito). Los paquetes necesarios son &amp;ldquo;Instant Client Package - Basic Lite&amp;rdquo; y &amp;ldquo;Instant Client Package - SDK&amp;rdquo;. cx_Oracle debería funcionar con cualquiera de las versiones 9.x y 10.x, así que vamos a bajar la última versión de la serie 10.x (que en este momento es la 10.2.0.4).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Análisis de Performance de un Script Python</title>
      <link>http://localhost:1313/2008/10/analisis-de-performance-de-un-script-python/</link>
      <pubDate>Sat, 11 Oct 2008 16:25:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/10/analisis-de-performance-de-un-script-python/</guid>
      <description>&lt;p&gt;Hola!&lt;/p&gt;
&lt;p&gt;De toda la pila de mails que recibo, leo y analizo (cuando puedo) de &lt;a href=&#34;http://www.python.com.ar/moin/ListaDeCorreo&#34;&gt;PyAr&lt;/a&gt;, me interesó mucho uno de &lt;a href=&#34;http://thread.gmane.org/gmane.org.user-groups.python.argentina/16293&#34;&gt;este hilo&lt;/a&gt;, referido al &lt;a href=&#34;http://en.wikipedia.org/wiki/Dot_language&#34;&gt;lenguaje DOT&lt;/a&gt; y su utilización práctica en el desarrollo en general. Básicamente, &lt;a href=&#34;http://article.gmane.org/gmane.org.user-groups.python.argentina/16299&#34;&gt;se comentó&lt;/a&gt; lo útil que es graficar la salida de la ejecución de un &lt;a href=&#34;http://en.wikipedia.org/wiki/Performance_analysis&#34;&gt;profiler&lt;/a&gt;, con este generador de lenguaje DOT basado en el log de cualquiera de los 3 módulos de &lt;a href=&#34;http://docs.python.org/library/profile.html&#34;&gt;profiling de Python&lt;/a&gt; [1][2]: &lt;a href=&#34;http://code.google.com/p/jrfonseca/wiki/Gprof2Dot&#34;&gt;Gprof2Dot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Brevemente, lo probé con un script que tengo para armar un archivo de texto con cierto formato, resultado de un query a una base de datos. Ejecuté esto, tal como dice el sitio de la herramienta:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apache 3.0 (?)</title>
      <link>http://localhost:1313/2008/06/apache-30/</link>
      <pubDate>Sat, 07 Jun 2008 14:33:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/06/apache-30/</guid>
      <description>&lt;p&gt;En mi carpeta de documentos &amp;ldquo;para leer&amp;rdquo; (o sea, pendientes) tenía una presentación que bajé hace algún tiempo de &lt;a href=&#34;http://www.eu.apachecon.com/eu2008/&#34;&gt;la última ApacheCon&lt;/a&gt; realizada en Amsterdam, en Abril de este año. Dicha presentación está muy buena, para &lt;a href=&#34;http://roy.gbiv.com/talks/200804_REST_ApacheCon.pdf&#34;&gt;bajarla&lt;/a&gt; y leerla atentamente: cuenta qué se cocina para la próxima gran versión de &lt;a href=&#34;http://httpd.apache.org/&#34;&gt;Apache&lt;/a&gt;, nuestro &lt;a href=&#34;http://es.wikipedia.org/wiki/Servidor_web&#34;&gt;Servidor Web&lt;/a&gt; amigo :-)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/SEqju_5zzPI/AAAAAAAABFI/FwQRwQHpRks/s1600-h/eu_2008_logo.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/SEqju_5zzPI/AAAAAAAABFI/FwQRwQHpRks/s400/eu_2008_logo.jpg&#34;&gt;&lt;/a&gt;&lt;br&gt;
En fin, parece que Apache 3.0 se renovará completamente, y aunque aclara que lo expresado no está 100% consensuado y aprovado por la comunidad, &lt;a href=&#34;http://roy.gbiv.com/&#34;&gt;Roy Fielding&lt;/a&gt; es miembro de &lt;a href=&#34;http://www.apache.org/&#34;&gt;Apache Fundation&lt;/a&gt;, esta charla fue la keynote del evento&amp;hellip; entonces, por qué no tomarlo como muy probable que ocurra lo que nos cuenta?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dell vende hardware con Ubuntu en Latinoamérica!</title>
      <link>http://localhost:1313/2008/02/dell-vende-hardware-con-ubuntu-en-latinoamerica/</link>
      <pubDate>Fri, 22 Feb 2008 16:21:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/02/dell-vende-hardware-con-ubuntu-en-latinoamerica/</guid>
      <description>&lt;p&gt;Me parece que voy a ir guardando monedita por monedita&amp;hellip; &lt;a href=&#34;http://www.dell.com.ar/&#34;&gt;Dell&lt;/a&gt; está vendiendo a partir de ahora computadoras (la notebook &lt;a href=&#34;http://www1.la.dell.com/content/products/features.aspx/dhs_notebooks_basic?c=ar&amp;amp;cs=ardhs1&amp;amp;l=es&amp;amp;s=dhs&#34;&gt;Inspiron 1525&lt;/a&gt; y la PC de escritorio &lt;a href=&#34;http://lastore.dell.com/store/frameset.asp?c=ar&amp;amp;cs=ardhs1&amp;amp;entity_key=INSP530_MT_AR&amp;amp;entity_type=CFGSET&amp;amp;l=es&amp;amp;s=dhs&amp;amp;shopper_country=ar&amp;amp;shopper_language=es&amp;amp;shopper_segment=dhs&amp;amp;store_key=LATRANS&#34;&gt;530MT&lt;/a&gt;) con Ubuntu 7.10 instalado!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/R776yZAmiCI/AAAAAAAAAQU/0WvB_y714NY/s1600-h/xps_m1330_large.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/R776yZAmiCI/AAAAAAAAAQU/0WvB_y714NY/s400/xps_m1330_large.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A diferencia de algunas cadenas de electrodomésticos que venden PCs &amp;ldquo;con Linux&amp;rdquo; con la firme intención de que luego el cliente instale Windows sin licencia (ya que no están configuradas y ni siquiera todo el hardware funciona), en este caso ocurre lo contrario.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Closed Source vs. Open Source: Cambio de Etapa?</title>
      <link>http://localhost:1313/2008/02/closed-source-vs-open-source-cambio-de-etapa/</link>
      <pubDate>Fri, 22 Feb 2008 15:53:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/02/closed-source-vs-open-source-cambio-de-etapa/</guid>
      <description>&lt;p&gt;Leyendo &lt;a href=&#34;http://www.genbeta.com/2008/02/21-microsoft-quiere-ser-mas-abierto&#34;&gt;esto&lt;/a&gt; (&amp;ldquo;Microsoft quiere ser más abierto&amp;rdquo;), extraigo:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Antes que nada, aclarar que &lt;strong&gt;Microsoft&lt;/strong&gt; no va a abrir el código de sus programas, como ya he visto que algún periódico ha anunciado. Dicho esto, el gigante de Redmond ha dado doy un paso importante en pos de la &lt;strong&gt;interoperabilidad&lt;/strong&gt; entre sus principales aplicaciones y el resto de competidores, especialmente los de código abierto.&amp;rdquo;&lt;br&gt;
[&amp;hellip;]&lt;br&gt;
&amp;quot; El primero es asegurar la &lt;strong&gt;conexión de sus principales productos&lt;/strong&gt; con terceras aplciaciones. Para ello, publicarán documentación completa sobre las APIs y los protocolos de comunicación. Esta documentación será gratuita. Indicarán, además, cuales de los protocolos están cubiertos por patentes, comprometiéndose a licenciar esas patentes a un precio reducido a aplicaciones comerciales. En el caso de &lt;strong&gt;aplicaciones de código abierto&lt;/strong&gt;, podrán utilizar estos protocolos, aunque tengan patente, sin miedo a que Microsoft les denuncie por ello.&amp;quot;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Un par de links... (Vi y DabbleDB)</title>
      <link>http://localhost:1313/2008/01/un-par-de-links-vi-y-dabbledb/</link>
      <pubDate>Sat, 05 Jan 2008 13:23:00 +0000</pubDate>
      <guid>http://localhost:1313/2008/01/un-par-de-links-vi-y-dabbledb/</guid>
      <description>&lt;p&gt;Bueno, tengo ganas de postear un par de links interesantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.viemu.com/a-why-vi-vim.html&#34;&gt;&amp;ldquo;Why, oh WHY, do those #?@! nutheads use vi?&lt;/a&gt;&lt;br&gt;
Tengo que confesarlo: Uso el Glorioso &lt;a href=&#34;http://www.vim.org/&#34;&gt;VIM&lt;/a&gt; para la gran mayoría de las cosas que hago con texto (programar, configurar servidores, etc.). Pero al comienzo de mi camino en Linux, viniendo yo de los editores &amp;ldquo;comunes&amp;rdquo; (Shift para seleccionar, Ctrl+C/Ctrl+V para Copiar/Pegar, etc.) el Vi/Vim me parecía una cosa completamente anticuada y sin sentido tener que apretar &amp;lsquo;i&amp;rsquo; para escribir (un asco, bah).&lt;br&gt;
Gracias a &lt;a href=&#34;http://gepatino.blogspot.com/&#34;&gt;Gabi&lt;/a&gt;, aprendí que el camino del Vi es un camino de ida y terminé adoptándolo por su enorme capacidad para editar y manipular el texto, y la verdad es que hoy en día siento que es irremplazable para un montón de cosas. Sin embargo, todavía me cuesta explicar en unos pocos minutos por qué &amp;ldquo;bancarse&amp;rdquo; su curva de aprendizaje (ver imagen abajo, je), y más me cuesta aún hacer un resumen corto de las características que más me gustan (de las que conozco). Este artículo me lo resuelve, y está muy bueno!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Un buen ejemplo de código PyGTK: Decibel</title>
      <link>http://localhost:1313/2007/10/un-buen-ejemplo-de-codigo-pygtk-decibel/</link>
      <pubDate>Sun, 14 Oct 2007 15:05:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/10/un-buen-ejemplo-de-codigo-pygtk-decibel/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://decibel.silent-blade.org/index.php?n=Main.HomePage&#34;&gt;Decibel Audio Player&lt;/a&gt; es un programa liviano, sencillo, no orientado a tener miles de funciones ( &lt;a href=&#34;http://amarok.kde.org/&#34;&gt;Amarok&lt;/a&gt;, les suena? :-D ), sino sólo a reproducir música de una lista. La verdad que las &lt;a href=&#34;http://decibel.silent-blade.org/index.php?n=Main.Screenshots&#34;&gt;capturas de pantalla&lt;/a&gt; (&amp;ldquo;everybody loves screenshots!&amp;rdquo;) pintaban prometedoras, y cuando leí que estaba hecho en Python + GTK, bajé el fuente a ver qué onda[1]&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/RxIyXn7y13I/AAAAAAAAAL4/OcdQYNW4qxw/s1600-h/main-file-explorer.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/RxIyXn7y13I/AAAAAAAAAL4/OcdQYNW4qxw/s400/main-file-explorer.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Y la verdad que me está gustando lo que estoy leyendo. La parte de módulos me parece bárbara, da gusto leerla: para hacer un módulo propio (aka &amp;lsquo;plugin&amp;rsquo;), uno hereda de una clase &amp;ldquo;Modulo&amp;rdquo; (también hay un ThreadedModule) y se registra a los eventos que quiere recibir, puede emitir eventos a los demás, etc. Las pantallas están hechas con &lt;a href=&#34;http://glade.gnome.org/&#34;&gt;Glade&lt;/a&gt;, el código está bien comentado (y bien identado, es Python! :-D ), el tamaño del proyecto y del fuente es manejable (al usar Glade, casi no se ve código de manejo de ventanas), usa semáforos, locks, está bien modularizado y orientado a objetos, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Una Revista de Python: Python Magazine</title>
      <link>http://localhost:1313/2007/10/una-revista-de-python-python-magazine/</link>
      <pubDate>Fri, 05 Oct 2007 00:09:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/10/una-revista-de-python-python-magazine/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://pythonmagazine.com/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://1.bp.blogspot.com/_nDZ247g0qSM/RwWFt37y12I/AAAAAAAAALw/Fm6m17uL5RY/s400/cover_thumbnail.jpg&#34;&gt;&lt;/a&gt; Me hago eco de &lt;a href=&#34;http://www.learningpython.com/2007/10/04/python-magazine-issue-one/&#34;&gt;un sitio sobre python&lt;/a&gt;, comentando que salió la primera edición de la &lt;a href=&#34;http://pythonmagazine.com/&#34;&gt;PyMag - Python Magazine&lt;/a&gt;, (la primera revista exclusivamente sobre Python?) :-)&lt;/p&gt;
&lt;p&gt;En su página de &lt;a href=&#34;http://pythonmagazine.com/c/p/about_pymag&#34;&gt;&amp;ldquo;Acerca de Nosotros&amp;rdquo;&lt;/a&gt;, comenta que &amp;ldquo;es una revista mensual exclusivamente dedicada a Python, que tendrá artículos de gran profundidad, evaluaciones de productos, tips, mucho código e ideas con un único objetivo en mente: ayudarlo a mejorar su manejo de Python y aplicarlos en su trabajo diario. PyMag es una revista técnica hecha por programadores para programadores.&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Taller de Python en la UNLu</title>
      <link>http://localhost:1313/2007/09/taller-de-python-en-la-unlu/</link>
      <pubDate>Sun, 09 Sep 2007 14:08:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/09/taller-de-python-en-la-unlu/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/RuQBIZaDcRI/AAAAAAAAALA/iBg54GRqM5w/s1600-h/Logo.gif&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://3.bp.blogspot.com/_nDZ247g0qSM/RuQBIZaDcRI/AAAAAAAAALA/iBg54GRqM5w/s320/Logo.gif&#34;&gt;&lt;/a&gt; Hola!&lt;/p&gt;
&lt;p&gt;Les cuento de que tuve el honor de que la gente del &lt;a href=&#34;http://www.codes-unlu.com.ar/&#34;&gt;CODES&lt;/a&gt; (Centro Organizado de Estudiantes de Sistemas de la &lt;a href=&#34;http://www.unlu.edu.ar/&#34;&gt;Universidad Nacional de Luján&lt;/a&gt;) más la del &lt;a href=&#34;http://www.unlux.com.ar/&#34;&gt;UnluX&lt;/a&gt; (del cual soy parte), me invitó a llevar adelante un taller de programación Python para los alumnos de los primeros años de sistemas de dicha Universidad.&lt;/p&gt;
&lt;p&gt;Como no tuve tiempo de armar ninguna presentación como para tener de &amp;ldquo;apunte&amp;rdquo;, le pedí a &lt;a href=&#34;http://www.taniquetil.com.ar/plog/&#34;&gt;Facundo Batista&lt;/a&gt; el permiso para utilizar las que él armó para las &lt;a href=&#34;http://jornadas.grulic.org.ar/7/&#34;&gt;7JRSL de Córdoba&lt;/a&gt;. Creo que sólo le modifiqué la primera página y el fondo, sin embargo, &lt;a href=&#34;http://www.unlux.com.ar/doc/intro-python-unlu.odp&#34;&gt;acá están para descargar&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Youtube usa Python</title>
      <link>http://localhost:1313/2007/08/youtube-usa-python/</link>
      <pubDate>Tue, 14 Aug 2007 13:23:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/08/youtube-usa-python/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/RsGsm09PgGI/AAAAAAAAAJ4/7k6yg0v_PqA/s1600-h/pic_youtubelogo_123x63.gif&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://2.bp.blogspot.com/_nDZ247g0qSM/RsGsm09PgGI/AAAAAAAAAJ4/7k6yg0v_PqA/s400/pic_youtubelogo_123x63.gif&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://highscalability.com/youtube-architecture&#34;&gt;En esta página&lt;/a&gt; hay un poquito de detalle sobre la arquitectura que utiliza YouTube, que sirve alrededor de 100.000.000 (sí, cien millones) de videos por día.&lt;/p&gt;
&lt;p&gt;Adivinen qué? Usa Linux + un Application Server escrito en Python. :-D&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://psyco.sourceforge.net/&#34;&gt;Psyco&lt;/a&gt; es un &amp;ldquo;acelerador&amp;rdquo; de python, digamos que compila &amp;ldquo;al vuelo&amp;rdquo; el código que interpreta python y lo convierte a código nativo de la plataforma (como si se hubiera escrito en C, digamos). Si a ellos les da resultados, se podría probar para casos donde se necesite performance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Metaprogramación en Python</title>
      <link>http://localhost:1313/2007/08/metaprogramacion-en-python/</link>
      <pubDate>Sat, 04 Aug 2007 15:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/08/metaprogramacion-en-python/</guid>
      <description>&lt;p&gt;Python está bárbaro, es sencillo y todo&amp;hellip; siempre leí que era muy fácil hacer metaprogramming con él, pero el problema es que uno haga metaprogramming de una forma fácil en su mente. :-P&lt;/p&gt;
&lt;p&gt;Veamos, la función getattr(), disponible en el módulo __builtins__ (o sea, disponible en todo momento), me permite cambiar esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;def get_transportistas_custodia(id_custodia):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;#34;&amp;#34;&amp;#34; Devuelvo todos los transportistas que están relacionados con una custodia &amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  c = Custodia.objects.get(id=1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  # Necesito el conjunto de transportistas de la custodia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  return c.transportistacustodia_set.all()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;def get_asegurados_custodia(id_custodia):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;#34;&amp;#34;&amp;#34; Devuelvo todos los asegurados que están relacionados con una custodia &amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(lo malo es que tengo que hacer una función por cada tipo de empresa relacionada con custodia).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chusmeando SQLObject - Parte II</title>
      <link>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-ii/</link>
      <pubDate>Wed, 11 Jul 2007 13:50:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-ii/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.turbogears.org&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RpY3Hh9dfgI/AAAAAAAAAIA/mdQkfrguxEM/s400/g_gear.png&#34;&gt;&lt;/a&gt; Continuando el post de ayer, otra desventaja del sistema de persistencia de Django es que no soporta atributos en relaciones &amp;ldquo;Muchos a Muchos&amp;rdquo;. Un caso podría ser Usuario &amp;lt;&amp;ndash;&amp;gt; Rol, donde un Usuario puede tener varios Roles y a su vez un Rol ser referenciado por varios usuarios; además, necesito almacenar si alguna combinación usuario&amp;lt;-&amp;gt;rol está activa o no. El atributo booleano &amp;ldquo;activo&amp;rdquo; sería una propiedad por cada Usuario&amp;lt;-&amp;gt;Rol en particular, y esto es lo que no soporta Django con su ManyToManyField.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chusmeando SQLObject - Parte I</title>
      <link>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-i/</link>
      <pubDate>Tue, 10 Jul 2007 13:32:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/07/chusmeando-sqlobject-parte-i/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RpTixI2NBII/AAAAAAAAAHw/IxLKiWwCU14/s1600-h/camadas.jpg&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RpTixI2NBII/AAAAAAAAAHw/IxLKiWwCU14/s400/camadas.jpg&#34;&gt;&lt;/a&gt; Aprovechando que el &lt;a href=&#34;http://es.wikipedia.org/wiki/Mapeo_objeto-relacional&#34;&gt;ORM&lt;/a&gt; en Python es noticia (ya que &lt;a href=&#34;http://www.osnews.com/story.php/18242/Canonical-Begins-Opening-up-Launchpad&#34;&gt;Canonical liberó&lt;/a&gt; &lt;a href=&#34;https://storm.canonical.com/&#34;&gt;Storm&lt;/a&gt;)&amp;hellip; comento un par de desventajas del framework para acceder a BDs desde &lt;a href=&#34;http://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; y cómo las soluciona &lt;a href=&#34;http://www.sqlobject.org/&#34;&gt;SQLObject&lt;/a&gt; (específicamente no lo usé, pero estuve leyendo algo&amp;hellip;)&lt;/p&gt;
&lt;p&gt;Al momento de laburar con Django y la forma en que maneja la BD (definición de los modelos) nos encontramos dos limitaciones graves:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;No soporte de herencia entre tablas. Es decir, si yo desde mi &amp;ldquo;mundo real&amp;rdquo; tengo que representar:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class Transporte():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   modelo = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   largo = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   ancho = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   patente = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class Auto(Vehiculo):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   tiene_baul = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class Camion(Vehiculo):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   tiene_semi = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;No puedo representar esto en Django, ya que no soporta herencia. Por lo tanto, se puede &amp;ldquo;simular&amp;rdquo; la herencia usando relaciones &amp;ldquo;uno a uno&amp;rdquo; o copiando y pegando. Con la primera
opción caímos en varios problemas, así que tuvimos que &amp;ldquo;copiar y pegar&amp;rdquo; las propiedades que deberían haber sido heredadas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Artículos de Python &#43; Glade en Español</title>
      <link>http://localhost:1313/2007/04/articulos-de-python-glade-en-espanol/</link>
      <pubDate>Mon, 09 Apr 2007 16:36:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/04/articulos-de-python-glade-en-espanol/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/Rhpt-a42MNI/AAAAAAAAAFY/hlo9m4QO6aM/s1600-h/glade-preview.png&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/Rhpt-a42MNI/AAAAAAAAAFY/hlo9m4QO6aM/s400/glade-preview.png&#34;&gt;&lt;/a&gt; Para aquell@s gentes que están incursionando en el mundo de la programación, el lenguaje &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; es ideal para aprender. Y es normal que las primeras cosas que se quieran hacer sean ventanas con botones, menúes y demás. &lt;a href=&#34;http://www.gtk.org/&#34;&gt;GTK&lt;/a&gt; es una librería que permite hacer eso para varias plataformas, como Windows, Linux, Solaris y Mac OSX (con problemas de integración, pero funciona). Por último, &lt;a href=&#34;http://glade.gnome.org/&#34;&gt;Glade&lt;/a&gt; es un programa que sirve para crear las ventanas+botones+menúes+etc. de forma gráfica, &amp;ldquo;dibujando&amp;rdquo;, arrastrando y pegando componentes en una suerte de &amp;ldquo;vista de diseño&amp;rdquo; (al mejor estilo Visual Basic o Delphi).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Complejidad Ciclomática de Código Python</title>
      <link>http://localhost:1313/2007/03/complejidad-ciclomatica-de-codigo-python/</link>
      <pubDate>Sat, 31 Mar 2007 13:15:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/03/complejidad-ciclomatica-de-codigo-python/</guid>
      <description>&lt;p&gt;Leyendo un blog por la web, me entero de qué es la &lt;a href=&#34;http://en.wikipedia.org/wiki/Cyclomatic_complexity&#34;&gt;Complejidad Ciclomática&lt;/a&gt; de un código fuente (uno de los &lt;a href=&#34;http://en.wikipedia.org/wiki/Software_metrics&#34;&gt;taantas métricas que hay&lt;/a&gt; para analizar la calidad y complejidad del código), y que este muchacho &lt;a href=&#34;http://gdub.wordpress.com/2006/07/09/cyclomatic-complexity-for-python-code/&#34;&gt;posteó un script&lt;/a&gt; para poder analizar la complejidad ciclomática de un paquete de fuentes python.&lt;/p&gt;
&lt;p&gt;Marcelo&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python como lenguaje &amp;quot;Enterprise-Ready&amp;quot;</title>
      <link>http://localhost:1313/2007/03/python-como-lenguaje-enterprise-ready/</link>
      <pubDate>Wed, 21 Mar 2007 12:12:00 +0000</pubDate>
      <guid>http://localhost:1313/2007/03/python-como-lenguaje-enterprise-ready/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.python.org/&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://4.bp.blogspot.com/_nDZ247g0qSM/RgEgoiHirwI/AAAAAAAAAE0/_LzR07qjV9c/s400/python-logo.gif&#34;&gt;&lt;/a&gt; Hace unos días ví &lt;a href=&#34;http://www.eweek.com/article2/0,1895,2100638,00.asp&#34;&gt;esta noticia&lt;/a&gt; sobre el uso de &lt;a href=&#34;http://www.python.org/&#34;&gt;Python&lt;/a&gt; en la industria de la aviación. Resulta que &lt;a href=&#34;http://www.itasoftware.com/&#34;&gt;ITA Software&lt;/a&gt; vende soluciones software para aerolíneas, como &lt;a href=&#34;http://www.aircanada.com/&#34;&gt;Air Canada&lt;/a&gt;. El entrevistado (Dan Kelley) comenta que si bien tienen una mezcla de lenguajes y tecnologías, destaca que Python + &lt;a href=&#34;http://twistedmatrix.com/trac/&#34;&gt;Twisted&lt;/a&gt; les permitió hacer un &lt;a href=&#34;http://es.wikipedia.org/wiki/Framework&#34;&gt;framework&lt;/a&gt; de monitorización de alta performance para coordinar la venta de asientos de vuelo desde múltiples orígenes de datos (en tiempo real, claro).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Servidor de Logs Remotos - Syslog-ng</title>
      <link>http://localhost:1313/2006/10/servidor-de-logs-remotos-syslog-ng/</link>
      <pubDate>Wed, 11 Oct 2006 12:31:00 +0000</pubDate>
      <guid>http://localhost:1313/2006/10/servidor-de-logs-remotos-syslog-ng/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.balabit.com/products/syslog-ng/&#34;&gt;Syslog-ng&lt;/a&gt; es un demonio de syslog infinitamente más flexible que el syslog &amp;ldquo;común&amp;rdquo; (tomado de BSD). Permite aplicar filtros, clasificar de acuerdo a distintos orígenes y enviar a diferentes destinos los logs. Para gestionar un servidor de logs, es muy fácil.&lt;/p&gt;
&lt;p&gt;Sólo fue cuestión de leer &lt;a href=&#34;http://www.debian-administration.org/articles/24&#34;&gt;esta guia&lt;/a&gt; y darle &amp;ldquo;apt-get install syslog-ng&amp;rdquo; y listo. Esto reemplaza al syslog anterior, pero la configuración del syslog-ng es la misma (en cuanto a funcionalidad, no en cuanto a sintaxis) que la de un debian recién instalado.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
